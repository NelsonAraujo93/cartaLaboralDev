{"version":3,"sources":["components/Global.js","assets/images/metrolinea-logo.png","components/form/Form.js","components/new/New.js","components/uncheckedNews/UncheckedNews.js","components/checkedNews/CheckedNews.js","components/news/News.js","components/createPDF/CreatePDF.js","components/createPDFPayroll/CreatePDFPayroll.js","components/contract-search/ContractSeach.js","components/contractorData/ContractorData.js","components/payrollData/PayrollData.js","assets/fonts/Roboto-Regular.ttf","assets/fonts/Roboto-Bold.ttf","components/newDetails/NewDetails.js","components/home/Home.js","components/login/Login.js","Router.js","App.js","reportWebVitals.js","index.js"],"names":["Global","url","ws","url_front","Form","props","userUrlStampRef","React","createRef","payroll","contractor","terms","fileChange","e","preventDefault","target","files","type","Swal","fire","title","confirmButtonText","allowOutsideClick","showCloseButton","value","stampData","stamp_url","object","FormData","append","setState","stamp","connectSocket","socket","io","setSocket","res","emit","data","on","forms","status","getForms","a","axios","get","then","sendForm","userData","name","userNameRef","email","userMailRef","identification","userIdentificationRef","telephone","userTelephoneRef","user","saveForm","formData","content","userContentRef","user_id","stamp_id","request_type","current","checked","validatorEmail","validator","isEmail","state","isLength","validatorName","validatorTelephone","validatorIdentification","validatorPDF","validatorContent","console","log","post","insertId","form","mailForm","mailState","id","history","push","backToNews","worngField","contract","idText","idPHolder","this","elements","document","getElementsByTagName","i","length","oninvalid","setCustomValidity","validity","valid","oninput","Fragment","className","onSubmit","src","logo","alt","htmlFor","ref","onChange","required","placeholder","maxLength","pattern","href","onClick","Component","New","onClickCard","clickCard","new","UncheckedNews","setQuantity","quantity","viewDetails","listForms","map","CheckedNews","aprovedArray","deniedArray","d","dataBadge","aproved","denied","getCheckedForms","bind","News","getUser","veryfyUserSesion","sesionToken","localStorage","getItem","headers","error","toast","notify","changeState","currentTarget","activeNav","querySelector","activeContainer","unactiveContainer","getElementById","uncheckedView","searchState","filterState","checkedForms","uncheckedForms","classList","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","getUncheckedLength","uncheckedLength","getCheckedLength","checkedDeniedLength","checkedAprovedLength","logOut","removeItem","handleChange","formss","searchedForms","checkedA","searchValue","checkedB","checkedC","searchNew","unchecked","contratistaString","nominaString","toUpperCase","indexOf","getSearchVal","clearWaitingQueue","Badge","color","badgeContent","max","noValidate","autoComplete","TextField","label","variant","IconButton","style","component","FormGroup","row","FormControlLabel","control","Checkbox","newestOnTop","rtl","limit","pauseOnFocusLoss","CreatePDF","contractNumberRef","contractYearRef","setContractNumber","closeAddContract","addContract","contratos","ejecuta","contratosEjecuta","suscribio","contratosSuscritos","removeContract","newContratos","response","splice","remove","addDetail","val","details","getDetail","replaceAll","html","denyButtonColor","result","isConfirmed","regex","selectedContracts","userId","diffx","diffy","draggingState","styles","left","top","stylesWindow","arrivalData","showDetail","contractData","event","item","tooltip","text","Tooltip","pdfPrev","contract_number","year","OverlayTrigger","transition","placement","overlay","Button","prev","CreatePDFPayroll","observations","openDragWindow","dragStart","dragging","dragOver","observData","screenX","getBoundingClientRect","screenY","ContractSearch","setInactive","items","querySelectorAll","Array","from","active","selectContract","classTarget","validateRelation","overLayRef","relatedContracts","contractsRelated","popover","Popover","Title","as","Content","onMouseOver","showObject","contractType","denyButtonText","showDenyButton","add","isDenied","ContractorData","getContractor","contractorId","contractorData","loadedContracts","pdfData","passRemove","pass","PayrollData","getPayroll","payrollId","dependency","dependencia","first_surname","second_surname","expedition_place","salary","NewDetails","newStateRef","generateQrCode","QRCode","toDataURL","urlFront","formQR","dateFormat","date","month","getMonth","getFullYear","dayString","getDay","day","getDate","monthString","setMonth","calendarDay","setDay","dayCalendarString","decenas","num","decena","Math","floor","unidad","unidades","decenasY","strSin","numUnidades","viewPrevPDf","method","responseType","file","Blob","fileURL","URL","createObjectURL","window","innerWidth","open","blobPDF","catch","prevBlobPDF","observ","mail","pdfValues","today","Date","admission_date","setDate","desde","fecha","pdfName","formId","pdfInfo","contracts","qr","updateForm","pdf_string","put","pdfString","contractorRef","prevPdfObjectFunc","passDataPayroll","prevPDF","prevPdfState","previewPDF","Carta","size","page","fixed","header","metrolineaImage","text1","rigth","fo","text2","body","mainTitle","fullWidthText","justifyP","boldP","contract_name","job_name","flexRow","col1","col2","boldC","qrContainer","metrolineaQR","footer","footerContent","footerTextContainer","footerText","ReactDOM","render","bDate","fDate","finish_date","contractTitle","value_string","execution_time","supervisor_name","Key","setCheckedSocket","setUncheckedSocket","setCheckedForms","setForms","updateDataState","pdf","isDismissed","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","updatedForm","admin_id","getPdf","showPdf","getFormById","passData","Font","register","family","Roboto","RobotoBold","payRollRef","paramId","match","params","StyleSheet","create","backgroundColor","padding","width","height","section","margin","flexGrow","backgroundSize","transform","display","flexDirection","borderBottom","marginBottom","bottom","borderTop","paddingTop","justifyContent","alignItems","fontSize","fontFamily","textAlign","textTransform","fontWeight","float","marginTop","prevPdfObject","removedContract","unCheckedObservations","requestType","checkedObservations","rejected","Modal","show","onShow","onHide","Header","closeButton","Body","addedContract","Home","redirect","Login","userPassRef","isLogged","login","setItem","token","maxlength","Router","exact","path","to","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","rel"],"mappings":"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","file":"static/js/main.b5b68d8c.chunk.js","sourcesContent":["var Global = {\r\n    /*url:\"http://localhost:3900/metrolinea/\",\r\n    ws:\"ws://localhost:3900\",\r\n    url_front:\"http://localhost:3900/\"*/\r\n    url:\"http://104.248.54.46:3900/metrolinea/\",\r\n    ws:\"ws://104.248.54.46:3900\",\r\n    url_front:\"http://104.248.54.46:3900/\",\r\n}\r\n\r\nexport default Global;","export default __webpack_public_path__ + \"static/media/metrolinea-logo.16f6c7f8.png\";","import './Form.css';\r\nimport React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Global from '../Global';\r\nimport logo from '../../assets/images/metrolinea-logo.png';\r\nimport {io} from 'socket.io-client';\r\nimport Swal from 'sweetalert2';\r\nimport validator from 'validator';\r\n\r\nclass Form extends Component{\r\n    \r\n    \r\n    \r\n    userUrlStampRef = React.createRef();\r\n    payroll = React.createRef();\r\n    contractor = React.createRef();\r\n    terms = React.createRef();\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.url = Global.url; \r\n        this.ws = Global.ws;\r\n        this.socket = null;\r\n        this.userTelephoneRef='';\r\n        this.userIdentificationRef ='';\r\n        this.userNameRef = '';\r\n        this.userMailRef = '';\r\n        this.userContentRef ='';\r\n        this.mailForm= {};\r\n        this.worngField='';\r\n        this.state ={\r\n            user : {\r\n                name: '',\r\n                email: '',\r\n                identification: '',\r\n                telephone: ''\r\n            },\r\n            stamp: null,\r\n            form:{\r\n                content:'',\r\n                stamp_id:0,\r\n                user_id:0\r\n            },\r\n            status: null,\r\n            payroll: false,\r\n            contract: false,\r\n            idText:'Identificación (sin puntos)',\r\n            idPHolder:'Ejemplo: 1144114402'\r\n        };\r\n    }\r\n    componentWillMount(){\r\n        this.connectSocket();\r\n    }\r\n    fileChange =(e) =>{\r\n        e.preventDefault();\r\n        if(e.target.files[0].type!=='application/pdf'){\r\n            Swal.fire(\r\n                {\r\n                    title: '<div class=\"big-square\"></div>'+\r\n                            '<div class=\"little-square\"></div>'+\r\n                            '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\"><p>El archivo adjunto debe ser formato pdf.</p></div></div>',\r\n                            confirmButtonText: 'Seguir',\r\n                            allowOutsideClick: false,\r\n                            showCloseButton: true\r\n                }\r\n            )\r\n            e.target.value= null;\r\n            return;\r\n\r\n        }\r\n        var stampData = {\r\n            stamp_url: e.target.files[0]\r\n        }\r\n        var object = new FormData();\r\n        object.append('file',stampData.stamp_url)\r\n\r\n        this.setState({\r\n            stamp : object\r\n        })\r\n    }\r\n    connectSocket = () =>{\r\n        this.socket = (io(this.ws));\r\n    }\r\n    setSocket = (res) =>{\r\n        //emit toast\r\n        this.socket.emit(\"set-unchecked-news\",res.data.data);\r\n        this.socket.on(\"get-unchecked-news\", data => {\r\n            this.setState({\r\n                forms: data,\r\n                status: 'success'\r\n            })\r\n        });\r\n    }\r\n    getForms = async () =>{\r\n       await axios.get(this.url+\"get-unchecked-forms\")\r\n            .then( res => {\r\n                this.setSocket(res);\r\n            })\r\n    }\r\n    sendForm = (e) =>{\r\n        e.preventDefault();\r\n        var userData = {\r\n            name : this.userNameRef,\r\n            email : this.userMailRef,\r\n            identification : this.userIdentificationRef,\r\n            telephone : this.userTelephoneRef\r\n        }\r\n        this.setState({\r\n           user : userData\r\n        })\r\n    }\r\n    saveForm = (e) =>{\r\n        debugger\r\n        e.preventDefault();\r\n        var userData = {\r\n            name : this.userNameRef,\r\n            email : this.userMailRef,\r\n            identification : this.userIdentificationRef,\r\n            telephone : this.userTelephoneRef\r\n        }\r\n        this.setState({\r\n           user : userData\r\n        }, async () => {\r\n            var formData = {\r\n                content: this.userContentRef,\r\n                user_id: 0,\r\n                stamp_id: 0,\r\n                request_type: this.payroll.current.checked ? 1 : 0\r\n            }\r\n            try {\r\n                var validatorEmail= validator.isEmail(this.state.user.email) && validator.isLength(this.state.user.email,1,50);\r\n                var validatorName= this.state.user.name!=='' && validator.isLength(this.state.user.name,1,50);\r\n                var validatorTelephone= this.state.user.telephone!=='' && validator.isLength(this.state.user.telephone,1,16);\r\n                var validatorIdentification= this.state.user.identification!=='' && validator.isLength(this.state.user.identification,1,16);\r\n                var validatorPDF= this.state.stamp !== null;\r\n                var validatorContent= formData.content !== '' && validator.isLength(formData.content,1,250);\r\n                \r\n            } catch (error) {\r\n                debugger\r\n                Swal.fire(\r\n                    {\r\n                        title: '<div class=\"big-square\"></div>'+\r\n                                '<div class=\"little-square\"></div>'+\r\n                                '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\"><p>Formulario diligenciado correctamente. Recibirá un correo con más información sobre su petición.</p></div></div>',\r\n                                confirmButtonText: 'Seguir',\r\n                                allowOutsideClick: false,\r\n                                showCloseButton: true\r\n                    }\r\n                )\r\n                return console.log(error);\r\n                \r\n            }\r\n            if(!this.terms.current.checked){\r\n                debugger\r\n                Swal.fire(\r\n                    {\r\n                        title: '<div class=\"big-square\"></div>'+\r\n                                '<div class=\"little-square\"></div>'+\r\n                                '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\"><p>Por favor acepte el uso de tratamiento de datos para continuar.</p></div></div>',\r\n                                confirmButtonText: 'Seguir',\r\n                                allowOutsideClick: false,\r\n                                showCloseButton: true\r\n                    }\r\n                )\r\n                return \r\n                \r\n            }\r\n            if(validatorEmail && validatorName && validatorContent && validatorTelephone && validatorIdentification && validatorPDF){\r\n    \r\n                axios.post(this.url+'create-user',this.state.user)\r\n                .then( res =>{\r\n                    if(res){\r\n                        formData.user_id = res.data.data.insertId;\r\n                        axios.post(this.url+'upload-stamp',this.state.stamp)\r\n                        .then( async res =>{\r\n                            if(res){\r\n                                var stamp={\r\n                                    stamp_url : res.data.data\r\n                                }\r\n                                await axios.post(this.url+'create-stamp',stamp)\r\n                                .then( async res =>{\r\n                                    if(res){\r\n                                        formData.stamp_id = res.data.data.insertId;\r\n                                        this.setState({\r\n                                            form : formData\r\n                                        })\r\n                                        await axios.post(this.url+'create-form', this.state.form)\r\n                                        .then( res =>{\r\n                                            if(res){\r\n                                                this.getForms();\r\n                                                this.socket.emit('new-form',this.state.form);\r\n                                                this.setState({\r\n                                                    status:'succes'\r\n                                                })\r\n                                                Swal.fire({\r\n                                                    title: '<div class=\"big-square\"></div>'+\r\n                                                    '<div class=\"little-square\"></div>'+\r\n                                                    '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\">Formulario diligenciado correctamente, recibirá un correo con más información sobre su petición.</div></div>',\r\n                                                    confirmButtonText: 'Seguir',\r\n                                                    allowOutsideClick: false,\r\n                                                    showCloseButton: true\r\n                                                }).then(()=>{\r\n                                                    this.mailForm.email=this.state.user.email;\r\n                                                    this.mailForm.name=this.state.user.name;\r\n                                                    this.mailForm.mailState=2;\r\n                                                    this.mailForm.id=res.data.data.insertId;\r\n                                                    axios.post(this.url+\"mail\",this.mailForm)\r\n                                                    .then( res => {\r\n                                                        this.props.history.push('/');\r\n                                                    });\r\n                                                })\r\n                                            }else{\r\n                                                this.setState({\r\n                                                    status:'failed'\r\n                                                })\r\n                                            }\r\n                                        })\r\n                                    }else{\r\n                                        this.setState({\r\n                                            status:'failed'\r\n                                        })\r\n                                    }\r\n                                })\r\n                            }else{\r\n                                this.setState({\r\n                                    status:'failed'\r\n                                })\r\n                            }\r\n                        })\r\n                    }else{\r\n                        this.setState({\r\n                            status:'failed'\r\n                        })\r\n                    }\r\n                })\r\n            }else{\r\n                \r\n                Swal.fire(\r\n                    {\r\n                        title: '<div class=\"big-square\"></div>'+\r\n                                '<div class=\"little-square\"></div>'+\r\n                                '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\"><p>Formulario mal diligenciado, debe ingresar un correo.</p></div></div>',\r\n                                confirmButtonText: 'Seguir',\r\n                                allowOutsideClick: false,\r\n                                showCloseButton: true\r\n                    }\r\n                )\r\n                return\r\n            }\r\n        });\r\n        \r\n        \r\n    }\r\n    backToNews = () => {\r\n        this.props.history.push('/');\r\n    }\r\n    componentDidMount(){\r\n        var elements = document.getElementsByTagName(\"INPUT\");\r\n        for (var i = 0; i < elements.length; i++) {\r\n            elements[i].oninvalid = function(e) {\r\n                e.target.setCustomValidity(\"\");\r\n                if (!e.target.validity.valid) {\r\n                    if(e.target.name==='file0'){\r\n                        e.target.setCustomValidity(\"Seleccione un archivo.\");\r\n                    }else{\r\n\r\n                        e.target.setCustomValidity(\"Complete este campo.\");\r\n                    }\r\n                }\r\n            };\r\n            elements[i].oninput = function(e) {\r\n                e.target.setCustomValidity(\"\");\r\n            };\r\n        }\r\n        \r\n        \r\n    }\r\n    render(){\r\n       \r\n        /*if(this.state.status==='succes'){\r\n            return (\r\n                <Redirect to=\"/user-home\"/>\r\n            )\r\n        }*/\r\n        \r\n        this.state.payroll=true;\r\n        var indentificationText;\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"form-content-container-main\">\r\n                    <form className=\"form-main\" onSubmit={this.saveForm}>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-logo\">\r\n                                <img className=\"login-logo\" src={logo} alt=\"imagen de metrolinea\"></img>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group-radio\">\r\n                            <div className=\"form-label\" htmlFor=\"requestType\">\r\n                                <div className=\"text-radio-label absolute-center\">\r\n                                    Tipo de petición:\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row no-gutters select-type align-items-center justify-content-center\">\r\n                                <div className=\"col-lg-12 radio-input\">\r\n                                    <label className=\"container-radio\">\r\n                                        Carta laboral nómina\r\n                                        <input type=\"radio\" className=\"form-input-check\" name=\"requestType\" ref={this.payroll} onChange={()=>{\r\n                                            this.payroll.current.checked=true;\r\n                                            this.contractor.current.checked=false;\r\n                                            debugger\r\n                                            this.setState({payroll:true},()=>{this.setState({idText:'Identificación'})})}} required></input>\r\n                                        <span className=\"checkmark\"></span>\r\n                                    </label>  \r\n                                </div>\r\n                                <div className=\"col-lg-12 radio-input\">    \r\n                                    <label className=\"container-radio\">\r\n                                        Carta laboral contratista\r\n                                        <input type=\"radio\" className=\"form-input-check\" name=\"requestType\" ref={this.contractor} onChange={()=>{\r\n                                            this.payroll.current.checked=false;\r\n                                            this.contractor.current.checked=true;\r\n                                            debugger;\r\n                                            this.setState({payroll:false},()=>{this.setState({idText:'Nit o Cédula (sin guiones ni puntos)'})})}}\r\n                                            ></input>\r\n                                        <span className=\"checkmark\"></span>\r\n                                    </label>\r\n                                </div>   \r\n                            </div>\r\n                            \r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-label\" htmlFor=\"nombre\">\r\n                                <div className=\"text absolute-center\">\r\n                                    Nombre del solicitante\r\n                                </div>\r\n                                <div className=\"required-mark\">\r\n                                        *\r\n                                    </div>\r\n                            </div>\r\n                            <input className=\"form-input\" type=\"text\" placeholder=\"Nombre completo\" name=\"nombre\" required maxLength=\"50\" pattern=\"^[a-zA-ZñÑáéíóúÁÉÍÓÚ ,.'-]+\" onChange={(e)=>{\r\n                                \r\n                                this.userNameRef= e.target.value===''? e.target.value : this.userNameRef;\r\n                                this.userNameRef= e.target.validity.valid? e.target.value : this.userNameRef;\r\n                                e.target.value=this.userNameRef;\r\n                                this.worngField= e.target.validity.valid? '': 'El campo nombre está mal diligenciado'\r\n                            }}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-label\" htmlFor=\"mail\">\r\n                                <div className=\"text absolute-center\">\r\n                                    Correo\r\n                                </div>\r\n                                <div className=\"required-mark\">\r\n                                        *\r\n                                    </div>\r\n                            </div>\r\n                            <input className=\"form-input\" type=\"text\" name=\"mail\"  placeholder=\"correo@ejemplo.com\"required maxLength=\"50\"  onChange={(e)=>{\r\n                                this.userMailRef=  e.target.value===''? e.target.value : this.userMailRef;\r\n                                this.userMailRef= e.target.validity.valid? e.target.value : this.userMailRef;\r\n                                e.target.value=this.userMailRef;\r\n                            }}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-label\" htmlFor=\"identification\">\r\n                                <div className=\"text absolute-center\">\r\n                                    {\r\n                                        //segun el selector\r\n                                        this.state.idText\r\n                                    }\r\n                                </div>\r\n                                <div className=\"required-mark\">\r\n                                        *\r\n                                    </div>\r\n                            </div>\r\n                            <input className=\"form-input\" placeholder=\"Ejemplo: 1144114402\" type=\"identification\" name=\"identification\" ref={this.userIdentificationRef} required maxLength=\"16\" pattern= \"\\d+\" onChange={(e)=>{\r\n                                \r\n                                this.userIdentificationRef=  e.target.value===''? e.target.value : this.userIdentificationRef;\r\n                                this.userIdentificationRef= e.target.validity.valid? e.target.value : this.userIdentificationRef;\r\n                                e.target.value=this.userIdentificationRef;\r\n                                this.worngField= e.target.validity.valid? '': 'El campo identificación está mal diligenciado';\r\n                            }}></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-label\" htmlFor=\"telephone\">\r\n                                <div className=\"text absolute-center\">\r\n                                    Teléfono\r\n                                </div>\r\n                                <div className=\"required-mark\">\r\n                                        *\r\n                                    </div>\r\n                            </div>\r\n                            <input className=\"form-input\" type=\"telephone\" placeholder=\"Ejemplo: 3166665689\" name=\"telephone\" required maxLength=\"16\" pattern= \"\\d+\" onChange={(e)=>{\r\n                                \r\n                                this.userTelephoneRef=  e.target.value===''? e.target.value : this.userTelephoneRef;\r\n                                this.userTelephoneRef= e.target.validity.valid? e.target.value : this.userTelephoneRef;\r\n                                e.target.value=this.userTelephoneRef;\r\n                                this.worngField= e.target.validity.valid? '': 'El campo teléfono está mal diligenciado';\r\n                            }}></input>\r\n                        </div>\r\n                        <div className=\"form-group form-text-area\">\r\n                            <div className=\"form-label\" htmlFor=\"content\">\r\n                                <div className=\"text absolute-center\">\r\n                                    Descripción de la solicitud\r\n                                </div>\r\n                                <div className=\"required-mark\">\r\n                                        *\r\n                                    </div>\r\n                            </div>\r\n                            <textarea className=\"text-area-input\" placeholder=\"Describa el motivo de la solicitud y los detalles\" type=\"text-area\" name=\"content\" required maxLength=\"250\" pattern=\"^[a-zA-Z ,.'-]+\" onChange={(e)=>{\r\n                                \r\n                                this.userContentRef=  e.target.value===''? e.target.value : this.userContentRef;\r\n                                this.userContentRef= e.target.validity.valid? e.target.value : this.userContentRef;\r\n                                e.target.value=this.userContentRef;\r\n                                this.worngField= e.target.validity.valid? '': 'El campo contenido está mal diligenciado';\r\n                            }}></textarea>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-label\" htmlFor=\"fiel0\">\r\n                                <div className=\"text absolute-center\">\r\n                                    Adjuntar estampilla\r\n                                </div>\r\n                            </div>\r\n                            <input id=\"archivo\" className=\"form-input-file\" type=\"file\" name=\"file0\" ref={this.userUrlStampRef} onChange={this.fileChange} required>\r\n                                \r\n                            </input>\r\n                            <label className=\"file-input\" htmlFor=\"archivo\">\r\n                                    Examinar\r\n                            </label>\r\n                            <div className=\"form-label\">\r\n                                <div className=\"text link absolute-center\">\r\n                                    Recuerda descargar tu estampilla primero <a href=\"https://estampillas.syc.com.co/\"  target=\"_blank\">Comprar estampilla</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group-radio\">\r\n                            <div className=\"form-label\" htmlFor=\"terms\">\r\n                                <div className=\"text-radio-label absolute-center\">\r\n                                    Términos de uso\r\n                                </div>\r\n                                \r\n                                <div className=\"required-mark\">\r\n                                        *\r\n                                    </div>\r\n                            </div>\r\n                            <div className=\"row no-gutters select-type align-items-center justify-content-center\">\r\n                                <div className=\"col-lg-12 radio-input-terminos\">\r\n                                    <label className=\"container-radio\">\r\n                                        Al momento de enviar el formulario, autorizo el uso de mis datos personales para el envío de información institucional por parte de Metrolinea S.A conforme a la ley 1581 del 2012, articulo 3°, literal a.<br/>\r\n                                        Ver condiciones sobre el <a href=\"https://www.metrolinea.gov.co/v3.0/ley-de-transparencia/politica-de-tratamiento-de-datos-habeas-data\"  target=\"_blank\">uso de mi información personal.</a>\r\n                                        <input type=\"radio\" className=\"form-input-check\" name=\"terms\" ref={this.terms} onChange={()=>{\r\n                                            this.terms.current.checked=true;}}></input>\r\n                                        <span className=\"checkmark\"></span>\r\n                                    </label>  \r\n                                </div>\r\n                            </div>\r\n                            \r\n                            \r\n                        </div>\r\n                        \r\n                        <input type=\"submit\" value=\"Enviar\"></input>\r\n                        <div className=\"back-container\">\r\n                            <div className=\"btn-back\" onClick={this.backToNews}>\r\n                                <div className=\"btn-label absolute-center\">Volver</div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n               \r\n               \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default Form;","import './New.css';\r\nimport React, {Component} from 'react';\r\nimport Global from '../Global';\r\n\r\nclass New extends Component{\r\n    /**\r\n     *  get props from parent\r\n     * \r\n     */\r\n     constructor(props){\r\n        super(props);\r\n        this.url = Global.url;\r\n        this.state ={\r\n          form: this.props.new\r\n        };\r\n    }\r\n    onClickCard = () =>{\r\n        this.props.clickCard(this.props.new);\r\n    }\r\n    \r\n    render(){\r\n        var state = null;\r\n        var checked = true;\r\n        \r\n        if(this.state.form.state === 1){\r\n            state=true;\r\n        }else if( this.state.form.state === 0){\r\n            state = false;\r\n        }else{\r\n           checked = false;\r\n        }\r\n        return(\r\n            <React.Fragment >\r\n                <div className=\"item-card-container\">\r\n                    <div className=\"item-card\" onClick={this.onClickCard}>\r\n                        <div className=\"state-container\">\r\n                            {\r\n                                state && checked && \r\n                                <div className=\"label-mark certified\"></div>\r\n                            }\r\n                            {\r\n                                !state && checked && \r\n                                <div className=\"label-mark denied\"></div>\r\n                            }\r\n                            {\r\n                                !checked && \r\n                                <div className=\"label-mark unchecked\"></div>\r\n                            }\r\n                        </div>\r\n                    \r\n                        <div className=\"item-container col-lg-auto\">\r\n                            <div className=\"item-data absolute-center item-dark-data\">{this.state.form.name}</div>\r\n                        </div>\r\n                        <div className=\"item-container dark-item col-lg-auto\">\r\n                            <div className=\"item-data absolute-center\">{this.state.form.identification}</div>\r\n                        </div>\r\n                        \r\n                        <div className=\"item-container col-lg-auto\">\r\n                            {\r\n                                this.state.form.request_type ? (\r\n                                    <div className=\"item-data absolute-center\">Nomina</div>\r\n                                ):(\r\n                                    <div className=\"item-data absolute-center\">Contratista</div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default New;","import './UncheckedNews.css';\r\nimport React, {Component} from 'react';\r\nimport Global from '../Global';\r\nimport New from '../new/New';\r\nimport axios from 'axios';\r\nimport {io} from 'socket.io-client';\r\n\r\nclass UncheckedNews extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.url = Global.url;\r\n        this.history = this.props.history;\r\n        this.ws = Global.ws;\r\n        this.socket = null;\r\n        this.state ={\r\n          forms: {},\r\n          status: null\r\n        };\r\n    }\r\n    setQuantity = (data) =>{\r\n        this.props.quantity(data.length);\r\n    }\r\n    connectSocket = () => {\r\n        this.socket = (io(this.ws));\r\n    }\r\n    componentWillMount(){\r\n        this.connectSocket();\r\n        this.getForms();\r\n    }\r\n    setSocket = (res) =>{\r\n        this.socket.emit(\"set-unchecked-news\",res.data.data);\r\n        this.socket.on(\"get-unchecked-news\", data => {\r\n            this.setState({\r\n                forms: data,\r\n                status: 'success'\r\n            })\r\n            this.setQuantity(data)\r\n        });\r\n        \r\n    }\r\n    viewDetails = (form) => {\r\n        var url= '/new-details/'+ form.id;\r\n        this.history.push(url);\r\n    }\r\n    getForms = () =>{\r\n        axios.get(this.url+\"get-unchecked-forms\")\r\n            .then( res => {\r\n                this.setSocket(res);\r\n            })\r\n    }\r\n    render(){\r\n        if(this.state.forms.length >= 1){\r\n            var listForms = this.state.forms.map((form, i)=>{\r\n                return(\r\n                    <New \r\n                    key={i} \r\n                    new={form}\r\n                    clickCard={this.viewDetails}\r\n                />\r\n                )\r\n            })\r\n            return (\r\n                <React.Fragment>\r\n                    <div className=\"formulario absolute-center\">\r\n                        {listForms}\r\n                    </div>\r\n                </React.Fragment>\r\n            )\r\n        }else if (this.state.forms.length === 0 && this.state.status=== 'success'){\r\n            return(\r\n                <React.Fragment>\r\n                    <div className=\"formulario absolute-center\">\r\n                        <h2 className=\"absolute-center\"> no hay formularios pendientes</h2>\r\n                    </div>\r\n                </React.Fragment>\r\n            )\r\n        }else{\r\n            return(\r\n                <React.Fragment>\r\n                    <div className=\"formulario absolute-center\">\r\n                        <h2 className=\"absolute-center\"> Cargando formularios ...</h2>\r\n                    </div>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default UncheckedNews;","import './CheckedNews.css';\r\nimport React, {Component} from 'react';\r\nimport Global from '../Global';\r\nimport New from '../new/New';\r\nimport axios from 'axios';\r\nimport {io} from 'socket.io-client';\r\n\r\nclass CheckedNews extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.url = Global.url;\r\n        this.ws = Global.ws;\r\n        this.socket = null;\r\n        this.history = this.props.history;\r\n        this.viewDetails = this.viewDetails.bind(this);\r\n        this.state ={\r\n          forms: {},\r\n          status: null\r\n        };\r\n    }\r\n    setQuantity = (data) =>{\r\n        const aprovedArray = [];\r\n        const deniedArray = [];\r\n        data.map((d)=>{\r\n            if(d.state === 1){\r\n                aprovedArray.push(d)\r\n            }else{\r\n                deniedArray.push(d);\r\n            }\r\n        });\r\n        const dataBadge={\r\n            aproved:aprovedArray,\r\n            denied:deniedArray\r\n        };\r\n        this.props.quantity(dataBadge);\r\n    }\r\n    componentWillMount(){\r\n        this.connectSocket();\r\n        this.getCheckedForms();\r\n    }\r\n    connectSocket = () => {\r\n        this.socket = (io(this.ws));\r\n    }\r\n    setSocket = (res) =>{\r\n        this.socket.emit(\"set-checked-news\",res.data.data);\r\n        this.socket.on(\"get-checked-news\", data => {\r\n            this.setState({\r\n                forms: data,\r\n                status: 'success'\r\n            })\r\n            this.setQuantity(data)\r\n        });\r\n    }\r\n    viewDetails = (form) => {\r\n        var url= '/new-details/'+ form.id;\r\n        this.history.push(url);\r\n    }\r\n    getCheckedForms = async () =>{\r\n        await axios.get(this.url+\"get-checked-forms\")\r\n            .then( res => {\r\n                this.setSocket(res);\r\n            });\r\n    }\r\n    render(){\r\n        if(this.state.forms.length >= 1){\r\n            var listForms = this.state.forms.map((form, i)=>{\r\n                return(\r\n                        <New \r\n                            key={i} \r\n                            new={form}\r\n                            clickCard={this.viewDetails}\r\n                        />\r\n                       \r\n                )\r\n            })\r\n            return (\r\n                <React.Fragment>\r\n                    <div className=\"formulario absolute-center\">\r\n                        {listForms}\r\n                    </div>\r\n                </React.Fragment>\r\n            )\r\n        }else if (this.state.forms.length === 0 && this.state.status=== 'success'){\r\n            return(\r\n                <React.Fragment>\r\n                    <div className=\"formulario absolute-center\">\r\n                        <h1 className=\"absolute-center\"> no hay Formularios</h1>\r\n                    </div>\r\n                </React.Fragment>\r\n            )\r\n        }else{\r\n            return(\r\n                <React.Fragment>\r\n                    <div className=\"formulario absolute-center\">\r\n                        <h1 className=\"absolute-center\"> no hay Formularios</h1>\r\n                    </div>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\nexport default CheckedNews;","import './News.css';\r\nimport React, {Component} from 'react';\r\nimport Global from '../Global';\r\nimport UncheckedNews from '../uncheckedNews/UncheckedNews';\r\nimport CheckedNews from '../checkedNews/CheckedNews';\r\nimport {io} from 'socket.io-client';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { TextField } from '@material-ui/core';\r\nimport Swal from 'sweetalert2';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchOutlined from '@material-ui/icons/SearchOutlined';\r\n\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n\r\nclass News extends Component{\r\n \r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.url = Global.url;\r\n        this.ws = Global.ws;\r\n        this.socket = null;\r\n        this.searchValue = '';\r\n        this.checkedForms = React.createRef();\r\n        this.uncheckedForms = React.createRef();\r\n        this.searchState= false;\r\n        this.filterState=false;\r\n        this.state ={\r\n            toast: null,\r\n            uncheckedLength: '0',\r\n            checkedAprovedLength: '0',\r\n            checkedDeniedLength: '0',\r\n            user: {},\r\n            searchedForms:[],\r\n            uncheckedForms:[],\r\n            checkedForms:{},\r\n            checkedA:true,\r\n            checkedB:false,\r\n            checkedC:false,\r\n            uncheckedView:true\r\n        };\r\n    }\r\n    componentWillMount(){\r\n        this.veryfyUserSesion();\r\n        toast.clearWaitingQueue();\r\n    }\r\n    getUser = (id) => {\r\n        axios.get(this.url+'get-admin/'+id)\r\n        .then(res => {\r\n            this.setState({\r\n                user: res.data.data\r\n            });\r\n        })\r\n    }\r\n\r\n    veryfyUserSesion = () =>{\r\n        const sesionToken = localStorage.getItem('userSesion');\r\n        axios.get(this.url+'auth-user', {\r\n            headers:{\r\n                'x-acces-token':sesionToken\r\n            }\r\n        })\r\n        .then(res => {\r\n            if(res.data.status !== 'Ok'){\r\n                Swal.fire({\r\n                    title: '<div class=\"big-square\"></div>'+\r\n                    '<div class=\"little-square\"></div>'+\r\n                    '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\"><p>Para acceder a la funcionalidad, debe iniciar sesión.</p></div></div>',\r\n                    confirmButtonText: 'Seguir',\r\n                    allowOutsideClick: false,\r\n                    showCloseButton: true\r\n                }).then(()=>{\r\n                    this.props.history.push('/login');\r\n                })\r\n            }else{\r\n                this.getUser(res.data.data.id);\r\n                this.connectSocket();\r\n            }\r\n        },\r\n        error =>{\r\n            Swal.fire({\r\n                title: '<div class=\"big-square\"></div>'+\r\n                '<div class=\"little-square\"></div>'+\r\n                '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\"><p>Para acceder a la funcionalidad, debe iniciar sesión.</p></div></div>',\r\n                confirmButtonText: 'Seguir',\r\n                allowOutsideClick: false,\r\n                showCloseButton: true\r\n            }).then(()=>{\r\n                this.props.history.push('/login');\r\n            })\r\n        })\r\n    }\r\n\r\n    connectSocket = () => {\r\n        this.socket = (io(this.ws));\r\n        this.socket.on(\"get-news\", data => {\r\n            this.setState({\r\n                toast: data\r\n            });\r\n            \r\n            this.notify();\r\n        });\r\n    }\r\n\r\n    changeState = (e,data) =>{\r\n        var target = e.currentTarget;\r\n        var activeNav =  document.querySelector('.btn-nav.active');\r\n        var activeContainer = document.querySelector('.active.content-news');\r\n        var unactiveContainer = document.querySelector('.inactive.content-news');\r\n        \r\n        var searchString= document.getElementById('outlined-basic');\r\n        searchString.value='';\r\n        if(this.state.uncheckedView){\r\n            if(data){\r\n                this.searchState=false;\r\n                \r\n                this.filterState=false;\r\n                this.setState({\r\n                    checkedForms:this.checkedForms.current.state.forms\r\n                });\r\n                this.setState({\r\n                    uncheckedView:false\r\n                },()=>{\r\n                    activeContainer.className='unchecked-forms content-news inactive';\r\n                    unactiveContainer.className='checked-forms content-news active';\r\n                    \r\n                    if(this.state.uncheckedForms.length!==0){\r\n                        this.uncheckedForms.current.setState({\r\n                            forms:this.state.uncheckedForms\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }else{\r\n            if(!data){\r\n                this.searchState=false;\r\n                \r\n                this.filterState=true;\r\n                    this.setState({\r\n                        uncheckedForms:this.uncheckedForms.current.state.forms\r\n                    });\r\n                this.setState({\r\n                    uncheckedView:true\r\n                },()=>{\r\n                    activeContainer.className='checked-forms content-news inactive';\r\n                    unactiveContainer.className='unchecked-forms content-news active';\r\n                    this.checkedForms.current.setState({\r\n                        forms:this.state.checkedForms\r\n                    });\r\n                })\r\n            }\r\n        }\r\n        if(target.classList[1]!=='active'){\r\n            if(target.classList[0]==='btn-nav-news'){\r\n                target.className='btn-nav-news active btn-nav';\r\n                activeNav.className='btn-nav-checked btn-nav';\r\n            }else{\r\n                target.className='btn-nav-checked active btn-nav';\r\n                activeNav.className='btn-nav-news btn-nav';\r\n            }\r\n        }\r\n    }\r\n\r\n    notify = () => {\r\n        toast.info('Nueva petición', {\r\n            position: \"bottom-right\",\r\n            autoClose: 15000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n    }\r\n\r\n    getUncheckedLength= (data) =>{\r\n        this.setState({\r\n            uncheckedLength: data\r\n        });\r\n    }\r\n\r\n    getCheckedLength= (data) =>{\r\n        this.setState({\r\n            checkedDeniedLength: data.denied.length,\r\n            checkedAprovedLength: data.aproved.length,\r\n        });\r\n    }\r\n\r\n    logOut = () =>{\r\n        //remove tokenSesion\r\n        localStorage.removeItem('userSesion');\r\n         Swal.fire({\r\n            title: '<div class=\"big-square\"></div>'+\r\n            '<div class=\"little-square\"></div>'+\r\n            '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\">Sesión cerrada</div></div>',\r\n        }).then(()=>{\r\n            this.props.history.push('/');\r\n        })\r\n        //redirectTo Home\r\n    }\r\n    handleChange = (e,data) => {\r\n        e.preventDefault();\r\n        debugger\r\n        var searchedForms= this.state.searchedForms;\r\n        \r\n        var searchString= document.getElementById('outlined-basic');\r\n        searchString.value='';\r\n        debugger\r\n        var formss;\r\n        if(data===0){\r\n            if(this.filterState){\r\n                if(e.currentTarget.checked){\r\n                    this.setState({\r\n                        checkedA:true\r\n                    },()=>{\r\n                        debugger\r\n                        this.checkedForms.current.setState({\r\n                            forms:[]\r\n                        },()=>{\r\n                            this.checkedForms.current.setState({\r\n                                forms:this.state.checkedForms\r\n                            })\r\n                            debugger\r\n                        });\r\n                    });\r\n                }\r\n                this.searchState=false;\r\n                this.searchValue='';\r\n            }\r\n           \r\n        }else if(data===1){\r\n            debugger\r\n            \r\n            this.searchValue='';\r\n            if(!this.filterState){\r\n                this.filterState=true;\r\n                this.searchState=true;\r\n                if(e.currentTarget.checked){\r\n                    this.setState({\r\n                        checkedB:true\r\n                    },()=>{\r\n                        debugger\r\n                        formss=this.state.checkedForms;\r\n                        searchedForms=[];\r\n                        this.checkedForms.current.setState({\r\n                            forms:[]\r\n                        },()=>{\r\n                            formss.map((form,i)=>{\r\n                                if(form.state){\r\n                                    \r\n                                    return searchedForms.push(form)\r\n                                }\r\n                            });\r\n                            this.checkedForms.current.setState({\r\n                                forms:searchedForms\r\n                            });\r\n                            debugger\r\n                        });\r\n                    });\r\n                }\r\n            }else{\r\n                \r\n                this.searchValue='';\r\n                if(e.currentTarget.checked){\r\n                    this.setState({\r\n                        checkedB:true\r\n                    },()=>{\r\n                        formss=this.state.checkedForms;\r\n                        searchedForms=[];\r\n                        this.checkedForms.current.setState({\r\n                            forms:[]\r\n                        },()=>{\r\n                            debugger\r\n                            formss.map((form,i)=>{\r\n                                if(form.state){\r\n                                    \r\n                                    return searchedForms.push(form)\r\n                                }\r\n                            });\r\n                            this.checkedForms.current.setState({\r\n                                forms:searchedForms\r\n                            });\r\n                            debugger\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n           \r\n        }else if(data===2){\r\n            \r\n            this.searchValue='';\r\n            debugger\r\n            if(!this.filterState){\r\n                this.filterState=true;\r\n                this.searchState=true;\r\n                if(e.currentTarget.checked){\r\n                    this.setState({\r\n                        checkedC:true\r\n                    },()=>{\r\n                        formss=this.state.checkedForms;\r\n                        searchedForms=[];\r\n                        this.checkedForms.current.setState({\r\n                            forms:[]\r\n                        },()=>{\r\n                            formss.map((form,i)=>{\r\n                                if(!form.state){\r\n                                    \r\n                                    return searchedForms.push(form)\r\n                                }\r\n                            });\r\n                            this.checkedForms.current.setState({\r\n                                forms:searchedForms\r\n                            });\r\n                        });\r\n                        debugger\r\n                    });\r\n                }\r\n            }else{\r\n                \r\n                this.searchValue='';\r\n                if(e.currentTarget.checked){\r\n                    this.setState({\r\n                        checkedC:true\r\n                    },()=>{\r\n                        debugger\r\n                        formss=this.state.checkedForms;\r\n                        searchedForms=[];\r\n                        this.checkedForms.current.setState({\r\n                            forms:[]\r\n                        },()=>{\r\n                            formss.map((form,i)=>{\r\n                                if(!form.state){\r\n                                    \r\n                                    return searchedForms.push(form)\r\n                                }\r\n                            });\r\n                            this.checkedForms.current.setState({\r\n                                forms:searchedForms\r\n                            });\r\n                            debugger\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n    searchNew = (e) =>{\r\n        debugger\r\n        e.preventDefault();\r\n        var data=this.searchValue;\r\n        var unchecked= document.querySelector('.unchecked-forms.active');\r\n        debugger\r\n        var formss;\r\n        var searchedForms= this.state.searchedForms;\r\n        var contratistaString='Contratista';\r\n        var nominaString='Nomina';\r\n       \r\n        if(data!==''){\r\n            if(this.filterState){\r\n                this.setState({checkedB:false});\r\n                this.setState({checkedC:false});\r\n                this.setState({checkedA:true},()=>{\r\n                    debugger\r\n                    this.filterState=false;\r\n                });\r\n            }\r\n            if(!this.searchState){\r\n                debugger\r\n                if(unchecked!==null){\r\n                    this.setState({\r\n                        uncheckedForms:this.uncheckedForms.current.state.forms\r\n                    },()=>{\r\n                        \r\n                        this.searchState=true;\r\n                        formss=this.state.uncheckedForms;\r\n                        searchedForms=[];\r\n                        this.uncheckedForms.current.setState({\r\n                            forms:[]\r\n                        },()=>{\r\n                            formss.map((form,i)=>{\r\n                                if(form.name.toUpperCase().indexOf(data.toUpperCase())>-1){\r\n                                    \r\n                                    return searchedForms.push(form)\r\n                                }else{\r\n                                    if(form.identification.indexOf(data)>-1){\r\n                                        \r\n                                        return searchedForms.push(form)\r\n                                    }else{\r\n                                        if(contratistaString.toUpperCase().indexOf(data.toUpperCase())>-1){\r\n                                            \r\n                                            form.request_type === 0? searchedForms.push(form) : searchedForms.push();\r\n                                        }else if(nominaString.toUpperCase().indexOf(data.toUpperCase())>-1){\r\n                                            form.request_type === 1? searchedForms.push(form) : searchedForms.push();\r\n                                        }else{\r\n                                            \r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                            this.uncheckedForms.current.setState({\r\n                                forms:searchedForms\r\n                            });\r\n                            \r\n                        });\r\n                    });\r\n                }else{\r\n                    this.setState({\r\n                        checkedForms:this.checkedForms.current.state.forms\r\n                    },()=>{\r\n                        \r\n                        this.searchState=true;\r\n                        formss=this.state.checkedForms;\r\n                        searchedForms=[];\r\n                        this.checkedForms.current.setState({\r\n                            forms:[]\r\n                        },()=>{\r\n                            \r\n                            formss.map((form,i)=>{\r\n                                if(form.name.toUpperCase().indexOf(data.toUpperCase())>-1){\r\n                                    \r\n                                    return searchedForms.push(form)\r\n                                }else{\r\n                                    if(form.identification.indexOf(data)>-1){\r\n                                        \r\n                                        return searchedForms.push(form)\r\n                                    }else{\r\n                                        if(contratistaString.toUpperCase().indexOf(data.toUpperCase())>-1){\r\n                                            \r\n                                            form.request_type === 0? searchedForms.push(form) : searchedForms.push();\r\n                                        }else if(nominaString.toUpperCase().indexOf(data.toUpperCase())>-1){\r\n                                            form.request_type === 1? searchedForms.push(form) : searchedForms.push();\r\n                                        }else{\r\n                                            \r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                            \r\n                            this.checkedForms.current.setState({\r\n                                forms:searchedForms\r\n                            });\r\n                        });\r\n                            \r\n                    });\r\n                }\r\n            }else{\r\n                debugger\r\n                if(unchecked!==null){\r\n                    formss=this.state.uncheckedForms;\r\n                    searchedForms=[];\r\n                    this.uncheckedForms.current.setState({\r\n                        forms:[]\r\n                    },()=>{\r\n                        //search en unchecked array\r\n                        formss.map((form,i)=>{\r\n                            if(form.name.toUpperCase().indexOf(data.toUpperCase())>-1){\r\n                                return searchedForms.push(form)\r\n                            }else{\r\n                                if(form.identification.indexOf(data)>-1){\r\n                                    return searchedForms.push(form)\r\n                                }else{\r\n                                    if(contratistaString.toUpperCase().indexOf(data.toUpperCase())>-1){\r\n                                        form.request_type === 0? searchedForms.push(form) : searchedForms.push();\r\n                                    }else if(nominaString.toUpperCase().indexOf(data.toUpperCase())>-1){\r\n                                        form.request_type === 1? searchedForms.push(form) : searchedForms.push();\r\n                                    }else{\r\n                                    }\r\n                                }\r\n                            }\r\n                        })\r\n                        this.uncheckedForms.current.setState({\r\n                            forms:searchedForms\r\n                        });\r\n                    });\r\n                }else{\r\n                    //search en checked array\r\n                    formss=this.state.checkedForms;\r\n                    searchedForms=[];\r\n                    this.checkedForms.current.setState({\r\n                        forms:[]\r\n                    },()=>{\r\n                        //search en unchecked array\r\n                        formss.map((form,i)=>{\r\n                            if(form.name.toUpperCase().indexOf(data.toUpperCase())>-1){\r\n                                \r\n                                return searchedForms.push(form)\r\n                            }else{\r\n                                if(form.identification.indexOf(data)>-1){\r\n                                    \r\n                                    return searchedForms.push(form)\r\n                                }else{\r\n                                    if(contratistaString.toUpperCase().indexOf(data.toUpperCase())>-1){\r\n                                        \r\n                                        form.request_type === 0? searchedForms.push(form) : searchedForms.push();\r\n                                    }else if(nominaString.toUpperCase().indexOf(data.toUpperCase())>-1){\r\n                                        form.request_type === 1? searchedForms.push(form) : searchedForms.push();\r\n                                    }else{\r\n                                        \r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                        this.checkedForms.current.setState({\r\n                            forms:searchedForms\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        }else{\r\n            debugger\r\n            if(unchecked!==null){\r\n                this.uncheckedForms.current.setState({\r\n                    forms:[]\r\n                },()=>{\r\n                    this.uncheckedForms.current.setState({\r\n                        forms:this.state.uncheckedForms\r\n                    })\r\n                });\r\n                this.searchState=false\r\n            }else{\r\n\r\n                this.checkedForms.current.setState({\r\n                    forms:[]\r\n                },()=>{\r\n                    this.checkedForms.current.setState({\r\n                        forms:this.state.checkedForms\r\n                    })\r\n                });\r\n                this.searchState=false\r\n            }\r\n        }\r\n\r\n    }\r\n    getSearchVal = (e) =>{\r\n        e.preventDefault();\r\n        debugger\r\n        this.searchValue = e.target.value\r\n    }\r\n    render(){ \r\n        var uncheckedView= this.state.uncheckedView;\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"row align-items-center justify-content-center news-container\">\r\n                    <div className=\"no-gutters content-container-news\">\r\n                        <div className=\"header-menu\">\r\n                            <div className=\"btn-nav-news active btn-nav\" onClick={(e)=>this.changeState(e,0)}>\r\n                                <div className=\"btn-label absolute-center\">\r\n                                    Pendientes\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"btn-nav-checked inactive btn-nav\" onClick={(e)=>this.changeState(e,1)}>\r\n                                <div className=\"btn-label absolute-center\">\r\n                                    Historial\r\n                                \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"btn-nav-close log-out\" onClick={this.logOut}>\r\n                                <div className=\"btn-label absolute-center\">\r\n                                    Cerrar sesión\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"news-content\">\r\n                            <div className=\"badge-container\">\r\n                                <div className=\"badge-content\">\r\n                                    <div className=\"badge-label\">\r\n                                        Pendientes:\r\n                                    </div>\r\n                                    <Badge className=\"news-unchecked\" color=\"primary\" badgeContent={this.state.uncheckedLength} max={999}>\r\n                                    </Badge>\r\n                                </div>\r\n                                <div className=\"badge-content\">\r\n                                    <div className=\"badge-label\">\r\n                                        Certificadas:\r\n                                    </div>\r\n                                    <Badge className=\"news-aproved\" badgeContent={this.state.checkedAprovedLength} max={999}>\r\n                                    </Badge>\r\n                                </div>\r\n                                <div className=\"badge-content\">\r\n                                    <div className=\"badge-label\">\r\n                                        Rechazadas:\r\n                                    </div>\r\n                                    <Badge className=\"news-denied\" color=\"secondary\" badgeContent={this.state.checkedDeniedLength}>\r\n                                    </Badge>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"search-container\">\r\n                                <form className=\"search\" noValidate autoComplete=\"off\" onSubmit={(e)=>{this.searchNew(e)}}>\r\n                                    <TextField id=\"outlined-basic\" label=\"Buscar\" variant=\"outlined\" onChange={(e)=>{this.getSearchVal(e)}} />\r\n                                </form>\r\n                                <label className=\"search-btn\" htmlFor=\"icon-button-file\">\r\n                                    <IconButton style={{color:'white'}} aria-label=\"upload picture\" component=\"span\" onClick={(e)=>{this.searchNew(e)}}>\r\n                                        <SearchOutlined />\r\n                                    </IconButton>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"unchecked-forms active content-news\">\r\n                                <UncheckedNews \r\n                                    history={this.props.history}\r\n                                    quantity={this.getUncheckedLength}\r\n                                    ref={this.uncheckedForms}\r\n                                />\r\n                            </div>\r\n                            <div className=\"checked-forms inactive content-news\">\r\n                                <CheckedNews \r\n                                    history={this.props.history}\r\n                                    quantity={this.getCheckedLength}\r\n                                    ref={this.checkedForms}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            !uncheckedView &&\r\n                            <div className=\"filter-content\">\r\n                            <FormGroup row>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={this.state.checkedA}\r\n                                            onChange={(e)=>{this.handleChange(e,0);\r\n                                            \r\n                                                this.setState({checkedB:false});\r\n                                                this.setState({checkedC:false})}}\r\n                                            name=\"checkedA\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                        }\r\n                                    label=\"Todas\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={this.state.checkedB}\r\n                                            onChange={(e)=>{this.handleChange(e,1);\r\n                                            \r\n                                                this.setState({checkedC:false});\r\n                                                this.setState({checkedA:false})}}\r\n                                            name=\"checkedB\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                        }\r\n                                    label=\"Certificadas\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={this.state.checkedC}\r\n                                            onChange={(e)=>{this.handleChange(e,2);\r\n                                                this.setState({checkedB:false});\r\n                                                this.setState({checkedA:false})\r\n                                            }}\r\n                                            name=\"checkedC\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                        }\r\n                                    label=\"Rechazadas\"\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                        }\r\n                        \r\n                        <div className=\"toast-container\">\r\n                            <ToastContainer\r\n                                position=\"bottom-right\"\r\n                                autoClose={15000}\r\n                                hideProgressBar={false}\r\n                                newestOnTop\r\n                                closeOnClick\r\n                                rtl={false}\r\n                                limit={3}\r\n                                pauseOnFocusLoss\r\n                                draggable\r\n                                pauseOnHover\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                   \r\n                    \r\n                </div>\r\n                \r\n            </React.Fragment>\r\n        )\r\n         \r\n    }\r\n}\r\nexport default News;","import './CreatePDF.css';\r\nimport React, {Component} from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport Global from '../Global';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport { BiEditAlt, BiTrash } from \"react-icons/bi\";\r\n//Lista de contratos\r\n//Botón consultar contratos\r\n//Validar si es nomina o Contratista\r\n//Botón previsualizar\r\n//crearPDF\r\n//Cargar Ventana de buscar\r\n\r\nclass CreatePDF extends Component{\r\n    contractNumberRef = React.createRef();\r\n    contractYearRef = React.createRef();\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.url = Global.url;\r\n        \r\n        this.contratosSuscritos=[];\r\n        this.contratosEjecuta=[];\r\n        this.state ={\r\n            contratos: {\r\n                ejecuta: [],\r\n                suscribio:[]\r\n            },\r\n            selectedContracts:[],\r\n            userId: null,\r\n            addContract: false,\r\n            diffx: 0,\r\n            diffy: 0,\r\n            draggingState: false,\r\n            styles: {\r\n                left: 50,\r\n                top: 50\r\n            },\r\n            stylesWindow: {\r\n            },\r\n            arrivalData : {},\r\n            showDetail: false\r\n        };\r\n    }\r\n    componentWillMount(){\r\n        this.setState({\r\n            arrivalData: this.props.contractData\r\n        });\r\n    }\r\n    setContractNumber = () =>{\r\n        \r\n        //Enviar el form\r\n        //Cargar la lista\r\n\r\n    }\r\n    closeAddContract= () =>{\r\n        \r\n        this.setState({\r\n            addContract: false\r\n        })\r\n    }\r\n    addContract = (data,type) =>{\r\n        var contratos = {\r\n            ejecuta:this.contratosEjecuta,\r\n            suscribio:this.contratosSuscritos\r\n        }\r\n        if(type==='Suscribio'){\r\n            \r\n            this.contratosSuscritos.push(data);\r\n            this.setState({\r\n                contratos: contratos\r\n            })\r\n        }else{\r\n            this.contratosEjecuta.push(data);\r\n            this.setState({\r\n                contratos: contratos\r\n            })\r\n        }\r\n        //Validar la relacion del usuario y el usuario del contrato\r\n    }\r\n    removeContract = (data,type) => {\r\n        var newContratos=this.state.contratos;\r\n        if(type===0){\r\n            newContratos.ejecuta.map((response,i)=>{\r\n                \r\n                if(response.id===data.id){\r\n                    newContratos.ejecuta.splice(i,1);\r\n                    this.setState({\r\n                        contratos:newContratos\r\n                    });\r\n                }\r\n            })\r\n            this.props.remove(data)\r\n        }else{\r\n            newContratos.suscribio.map((response,i)=>{\r\n                if(response.id===data.id){\r\n                    newContratos.suscribio.splice(i,1);\r\n                    this.setState({\r\n                        contratos:newContratos\r\n                    });\r\n                }\r\n            })\r\n            this.props.remove(data)\r\n        }\r\n    }\r\n    addDetail = (data,val, type) => {\r\n        \r\n        var newContratos=this.state.contratos;\r\n        if(type){\r\n            newContratos.suscribio.map((contract,i)=>{\r\n                if(contract.id===data.id){\r\n                    contract.details = val;\r\n                    this.setState({\r\n                        contratos:newContratos\r\n                    });\r\n                }\r\n            })\r\n        }else{\r\n            newContratos.ejecuta.map((contract,i)=>{\r\n                if(contract.id===data.id){\r\n                    contract.details = val;\r\n                    this.setState({\r\n                        contratos:newContratos\r\n                    });\r\n                }\r\n            })\r\n        }\r\n        \r\n    }\r\n    getDetail = (data, type) => {\r\n        \r\n        var newContratos=this.state.contratos;\r\n        if(type){\r\n            newContratos.suscribio.map((contract,i)=>{\r\n                var regex = '<br />';\r\n                if(contract.id===data.id){\r\n                    contract.details=contract.details.replaceAll(regex, \"\\n\");\r\n                    Swal.fire({\r\n                        html: '<div class=\"big-square\"></div>'+\r\n                        '<div class=\"little-square\"></div>'+\r\n                        '<div class=\"bg-title-lit\"><div class=\"list-label pop absolute-center\">Agregar detalle</div></div>'+\r\n                        '<textarea id=input-detail  type=\"text-area\" name=\"detail\">'+contract.details+'</textarea>',\r\n                        denyButtonColor: '#0A9B91',\r\n                        confirmButtonText: 'Listo',\r\n                        allowOutsideClick: false,\r\n                        showCloseButton: true\r\n                    }).then(result => {\r\n                        if (result.isConfirmed) {\r\n\r\n                            var val = document.getElementById('input-detail').value;\r\n                            var regex = '<br />';\r\n                            val=val.replaceAll(regex, \"\\n\");\r\n                            this.addDetail(contract, val , 1)\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n        }else{\r\n            newContratos.ejecuta.map((contract,i)=>{\r\n                var regex = '<br />';\r\n                if(contract.id===data.id){\r\n                    contract.details=contract.details.replaceAll(regex, \"\\n\");\r\n                    \r\n                    Swal.fire({\r\n                        html: '<div class=\"big-square\"></div>'+\r\n                        '<div class=\"little-square\"></div>'+\r\n                        '<div class=\"bg-title-lit\"><div class=\"list-label pop absolute-center\">Agregar detalle</div></div>'+\r\n                        '<textarea id=input-detail  type=\"text-area\" name=\"detail\">'+contract.details+'</textarea>',\r\n                        denyButtonColor: '#0A9B91',\r\n                        confirmButtonText: 'Listo',\r\n                        allowOutsideClick: false,\r\n                        showCloseButton: true\r\n                    }).then(result => {\r\n                        if (result.isConfirmed) {\r\n\r\n                            var val = document.getElementById('input-detail').value;\r\n                            val=val.replaceAll(regex, \"\\n\");\r\n                            this.addDetail(contract, val , 0)\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n        }\r\n        \r\n    }\r\n    showObject(event, item){ \r\n        this.setState({\r\n            showDetail: true\r\n        })\r\n    }\r\n  \r\n    render(){\r\n        var user=this.props.user;\r\n        const tooltip= (text) =>{\r\n            return(\r\n                <Tooltip id=\"button-tooltip\">\r\n                    {text}\r\n                </Tooltip>\r\n              );\r\n        }\r\n        return(\r\n            <React.Fragment>\r\n                { \r\n                    user===undefined || user===null ? (\r\n                        <div className=\"content-createPDF\">\r\n                        <div className=\"prev-container h-10\">\r\n                            <div className=\"btn-prev\" onClick={()=>{this.props.pdfPrev()}}>\r\n                                <div className=\"btn-label absolute-center\">ver Certificado</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n               \r\n                    ):(\r\n                        <div className=\"content-createPDF\">\r\n                    <div className=\"row h-90 no-gutters\">\r\n                        <div className=\"col-lg-12 h-100\">\r\n                            <div className=\"row h-50 no-gutters\">\r\n                                {\r\n                                    this.state.contratos.ejecuta.length > 0 ? (\r\n                                        <div className=\"list-container ejecuta-list\">\r\n                                            <div className=\"list-label\">Ejecuta</div>\r\n                                            <div className=\"list\">\r\n                                                {\r\n                                                    this.state.contratos.ejecuta.map(( item , i) =>{\r\n                                                        return(\r\n                                                            <div\r\n                                                                className='item-list-added row no-gutters align-items-center justify-content-center'\r\n                                                                key={i}\r\n                                                            >\r\n                                                                <div className=\"colum-container col-lg-1\">\r\n                                                                    <div className=\"column-data absolute-center\">\r\n                                                                        {item.contract_number}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"colum-container col-lg-2\">\r\n                                                                    <div className=\"column-data absolute-center\">\r\n                                                                        {item.year}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                \r\n                                                                <div className=\"colum-container col-lg-6\">\r\n                                                                    <div className=\"column-data elipsis absolute-center\">\r\n                                                                        {item.object}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                \r\n                                                                <OverlayTrigger transition={false}  placement=\"bottom\" overlay={tooltip('Agregar detalle')}>\r\n                                                                    \r\n                                                                    <div className=\"colum-container col-lg-1\">\r\n                                                                        <div variant=\"success\" className=\"column-data absolute-center\">\r\n                                                                            <Button variant=\"edit\" onClick={()=> {\r\n                                                                                const detail=this.getDetail(item , 0);\r\n                                                                                }\r\n                                                                            }>\r\n                                                                                <BiEditAlt className=\"no-events absolute-center\"/>\r\n                                                                            </Button>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </OverlayTrigger>\r\n                                                                <OverlayTrigger transition={false}  placement=\"bottom\" overlay={tooltip('Remover')}>\r\n                                                                    \r\n                                                                    <div className=\"colum-container col-lg-1\">\r\n                                                                        <div variant=\"success\" className=\"column-data absolute-center\">\r\n                                                                            <Button variant=\"danger\" onClick={()=> this.removeContract(item,0)}>\r\n                                                                            \r\n                                                                                <BiTrash className=\"no-events absolute-center\"/>\r\n                                                                            </Button>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </OverlayTrigger>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <div className=\"list-container ejecuta-list\">\r\n                                            <div className=\"list-label\">Ejecuta</div>\r\n                                            <div className=\"list\">\r\n                                                <h2 className=\"list-label absolute-center\">No hay resultados</h2>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                            <div className=\"row h-50 no-gutters\">\r\n                                {\r\n                                    this.state.contratos.suscribio.length > 0 ? (\r\n                                        <div className=\"list-container suscribio-list\">\r\n                                            \r\n                                            <div className=\"list-label\">Suscribió</div>\r\n                                            <div className=\"list\">\r\n                                                {\r\n                                                    this.state.contratos.suscribio.map(( item , i) =>{\r\n                                                        return(\r\n                                                            <div\r\n                                                                className='item-list-added row no-gutters align-items-center justify-content-center'\r\n                                                                key={i}\r\n                                                            >\r\n                                                                <div className=\"colum-container col-lg-1\">\r\n                                                                    <div className=\"column-data absolute-center\">\r\n                                                                        {item.contract_number}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"colum-container col-lg-2\">\r\n                                                                    <div className=\"column-data absolute-center\">\r\n                                                                        {item.year}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"colum-container col-lg-5\">\r\n                                                                    <div className=\"column-data elipsis absolute-center\">\r\n                                                                        {item.object}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"colum-container col-lg-1\">\r\n                                                                    <div className=\"column-data absolute-center\">\r\n                                                                        <Button variant=\"edit\" onClick={()=> {\r\n                                                                                    const detail=this.getDetail(item , 1);\r\n                                                                                    }\r\n                                                                                }>\r\n                                                                                <BiEditAlt className=\"no-events absolute-center\"/>\r\n                                                                        </Button>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"colum-container col-lg-1\">\r\n                                                                    <div className=\"column-data absolute-center\">\r\n                                                                        <Button variant=\"danger\" onClick={()=>this.removeContract(item,1)}>\r\n                                                                            <BiTrash  className=\"absolute-center\"/>\r\n                                                                        </Button>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                    ) : (\r\n                                        <div className=\"list-container suscribio-list\">\r\n                                            <div className=\"list-label\">Suscribió</div>\r\n                                            <div className=\"list\">\r\n                                                <h2 className=\"list-label absolute-center\">No hay resultados</h2>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n              \r\n                    <div className=\"prev-container h-10\">\r\n                        <div className=\"btn-prev\" onClick={()=>{this.props.prev(0)}}>\r\n                            <div className=\"btn-label absolute-center\">Previsualizar</div>\r\n                        </div>\r\n                    </div>\r\n              </div>\r\n                    )\r\n                }\r\n              \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default CreatePDF;","import './CreatePDFPayroll.css';\r\nimport React, {Component} from 'react';\r\nimport Global from '../Global';\r\n\r\n//Lista de contratos\r\n//Botón consultar contratos\r\n//Validar si es nomina o Contratista\r\n//Botón previsualizar\r\n//crearPDF\r\n//Cargar Ventana de buscar\r\n\r\nclass CreatePDFPayroll extends Component{\r\n\r\n    observations = React.createRef();\r\n    constructor(props){\r\n        \r\n        super(props);\r\n        this.url = Global.url;\r\n        this.dragStart = this.dragStart.bind(this);\r\n        this.dragging = this.dragging.bind(this);\r\n        this.dragOver = this.dragOver.bind(this);\r\n        this.observData= this.observations;\r\n        this.state ={\r\n            userId: null,\r\n        };\r\n    }\r\n    setContractNumber = () =>{\r\n        \r\n        //Enviar el form\r\n        //Cargar la lista\r\n\r\n    }\r\n    closeAddContract= () =>{\r\n        \r\n        this.setState({\r\n            addContract: false\r\n        })\r\n    }\r\n    /*addContract = (data,type) =>{\r\n        \r\n        var contratos = {\r\n            ejecuta:this.contratosEjecuta,\r\n            suscribio:this.contratosSuscritos\r\n        }\r\n        if(type==='Suscribio'){\r\n            \r\n            this.contratosSuscritos.push(data);\r\n            this.setState({\r\n                contratos: contratos\r\n            })\r\n        }else{\r\n            this.contratosEjecuta.push(data);\r\n            this.setState({\r\n                contratos: contratos\r\n            })\r\n        }\r\n        //Validar la relacion del usuario y el usuario del contrato\r\n    }*/\r\n    dragStart(e){\r\n        this.setState({\r\n            diffx: e.screenX - e.currentTarget.getBoundingClientRect().left,\r\n            diffy: e.screenY - e.currentTarget.getBoundingClientRect().top,\r\n            draggingState: true\r\n        })\r\n    }\r\n    dragOver(){\r\n        this.setState({\r\n            draggingState: false\r\n        })\r\n    }\r\n    dragging(e){\r\n        if(this.state.draggingState){\r\n            var lefty = e.screenX - this.state.diffx;\r\n            var topy = e.screenY - this.state.diffy;\r\n            var style = {\r\n                left: lefty,\r\n                top: topy\r\n            }\r\n            this.setState({\r\n                styles: style\r\n            })\r\n            console.log(style)\r\n        } \r\n    }\r\n    openDragWindow= (e) =>{\r\n\r\n        this.setState({\r\n            addContract:true\r\n        })\r\n    }\r\n    render(){\r\n        var user=this.props.user;\r\n        return(\r\n            <React.Fragment>\r\n              \r\n                { \r\n                    user===undefined || user===null ? (\r\n\r\n                        <div className=\"content-Payroll\">\r\n                            <div className=\"prev-container h-10\">\r\n                                <div className=\"btn-prev\" onClick={()=>{this.props.pdfPrev()}}>\r\n                                    <div className=\"btn-label absolute-center\">ver certificado</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ):(\r\n                        <div className=\"content-Payroll\">\r\n                            <div className=\"row h-90 no-gutters align-items-center\">\r\n                                <div className=\"container-text-area col-lg-12 h-90\">\r\n                                    <textarea className=\"text-area-input\" type=\"text-area\" name=\"content\" ref={this.observations}></textarea>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"prev-container h-10\">\r\n                                <div className=\"btn-prev\" onClick={()=>{this.props.prev(1,this.observations);\r\n\r\n                                }}>\r\n                                    <div className=\"btn-label absolute-center\">Previsualizar</div>\r\n                                </div>\r\n                            </div>\r\n                        \r\n                        </div>\r\n                    )\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default CreatePDFPayroll;","import './ContractSearch.css';\r\nimport React, {Component} from 'react';\r\nimport Global from '../Global';\r\nimport Swal from 'sweetalert2';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Popover from 'react-bootstrap/Popover';\r\n\r\nclass ContractSearch extends Component{\r\n    contractNumberRef = React.createRef();\r\n    contractYearRef = React.createRef();\r\n    \r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.overLayRef = React.createRef();\r\n        this.url = Global.url;\r\n        this.relatedContracts= this.props.contractsRelated;\r\n        this.state ={\r\n            contratos:[],\r\n            selectedContracts:null,\r\n            userId: null,\r\n            active:'item-list row no-gutters align-items-center justify-content-center',\r\n            showDetail: false\r\n        };\r\n    }\r\n    componentWillMount(){\r\n        this.setState({\r\n            contratos: this.relatedContracts\r\n        });\r\n    }\r\n    setContractNumber = () =>{\r\n        \r\n        //Enviar el form\r\n        //Cargar la lista\r\n\r\n    }\r\n    setInactive=()=>{\r\n        var items = document.querySelectorAll('.item-list');\r\n        if(items.length>=1){\r\n            var itemsArray = Array.from(items)\r\n            itemsArray.map((item,i)=>{\r\n                item.className=this.state.active\r\n            })\r\n        }\r\n        \r\n    }\r\n    selectContract= (e,data) =>{\r\n        this.setInactive();\r\n        data.details='';\r\n        var classTarget = e.currentTarget;\r\n        classTarget.className = classTarget.className + ' active'\r\n        this.setState({ \r\n            selectedContracts : data \r\n        });\r\n        \r\n\r\n    }\r\n    validateRelation = () =>{\r\n        \r\n        //Validar la relacion del usuario y el usuario del contrato\r\n    }\r\n    addContract = () =>{\r\n        //enviar el contrato al padre\r\n    }\r\n    removeContract =(data) =>{\r\n        //add item to array\r\n        var newContratos=this.state.contratos;\r\n        newContratos.push(data);\r\n        this.setState({\r\n            contratos:newContratos\r\n        });\r\n    }\r\n    showObject(event, item){ \r\n        this.setState({\r\n            showDetail: true\r\n        })\r\n    }\r\n    render(){\r\n        const popover= (item) =>{\r\n            return(\r\n                <Popover transition={false} id=\"popover-basic\">\r\n                  <Popover.Title as=\"h3\">Objeto del contrato</Popover.Title>\r\n                  <Popover.Content>\r\n                      {\r\n                          item.object\r\n                      }\r\n                  </Popover.Content>\r\n                </Popover>\r\n              );\r\n        }\r\n        return(\r\n            <React.Fragment>\r\n              <div className=\"container-search-contract\">\r\n                    <div className=\"search-row row h-100 no-gutters\">\r\n                        <div className=\"col-lg-12 h-100\">\r\n                            {/*<div className=\"row h-20 no-gutters\">\r\n                                <form className=\"form-search\" onSubmit={this.sendContractNumber}>\r\n                                    <div className=\"col-lg-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <div className=\"form-label\" htmlFor=\"number\">\r\n                                                <div className=\"text absolute-center\">\r\n                                                    Numero de contrato\r\n                                                </div>\r\n                                            </div>\r\n                                            <input className=\"form-input\" type=\"text\" name=\"number\" ref={this.contractNumberRef}></input>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-lg-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <div className=\"form-label\" htmlFor=\"year\">\r\n                                                <div className=\"text absolute-center\">\r\n                                                    Año del contrato\r\n                                                </div>\r\n                                            </div>\r\n                                            <input className=\"form-input\" type=\"text\" name=\"year\" ref={this.contractYearRef}></input>\r\n                                        </div>\r\n                                    </div> \r\n                                </form>\r\n        </div>*/}\r\n                            <div className=\"row h-80 no-gutters\">\r\n                                {\r\n                                    this.state.contratos.length > 0 ? (\r\n                                        <div className=\"list-container-search\"> \r\n                                            <div className=\"list-label\">Resultado de búsqueda</div>\r\n                                            <div className=\"item-list-header row no-gutters align-items-center justify-content-center\">\r\n                                                    <div className=\"column-container col-lg-1\">\r\n                                                        <div className=\"column-data absolute-center\">\r\n                                                            N°\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"column-container col-lg-3\">\r\n                                                        <div className=\"column-data absolute-center\">\r\n                                                            Año\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"column-container col-lg-7\">\r\n                                                        <div className=\"column-data  absolute-center\">\r\n                                                            Objeto\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            <div className=\"list\">\r\n                                                {\r\n                                                    this.state.contratos.map(( item , i) =>{\r\n                                                        return(\r\n                                                            <div\r\n                                                                className={this.state.active}\r\n                                                                key={i}\r\n                                                                onClick={(e)=>{this.selectContract(e,item)}}\r\n                                                            >\r\n                                                                <div className=\"column-container col-lg-1\">\r\n                                                                    <div className=\"column-data absolute-center\">\r\n                                                                        {item.contract_number}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"column-container col-lg-3\">\r\n                                                                    <div className=\"column-data absolute-center\">\r\n                                                                        {item.year}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"column-container col-lg-7\">\r\n                                                                    <div onMouseOver={(e)=>{this.showObject(e,item.object)}}>\r\n                                                                        {\r\n                                                                            <OverlayTrigger transition={false} ref={this.overLayRef} placement=\"right\" overlay={popover(item)}>\r\n                                                                                <div variant=\"success\" className=\"column-data elipsis absolute-center\">\r\n                                                                                    {item.object}\r\n                                                                                </div>\r\n                                                                            </OverlayTrigger>\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        \r\n                                        </div>\r\n                                    ) : (\r\n                                        <div className=\"list-container-search\">\r\n                                            <div className=\"list-label\">Resultado de búsqueda</div>\r\n                                            <div className=\"list\">\r\n                                                <h2 className=\"absolute-center\">No hay resultados</h2>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                            <div className=\"row h-10 align-items-center justify-content-center no-gutters\">\r\n                                <div className=\"item-container col-lg-auto\">\r\n                                    <div  className={this.state.selectedContracts===null  ? \"btn-add-contract inactive\": \"btn-add-contract\"} onClick={()=>{\r\n                                        if(this.state.selectedContracts===null){\r\n                                            Swal.fire(\r\n                                                {\r\n                                                    title: '<div class=\"big-square\"></div>'+\r\n                                                            '<div class=\"little-square\"></div>'+\r\n                                                            '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\"><p>Por favor seleccione un contrato de la lista.</p></div></div>',\r\n                                                            confirmButtonText: 'Seguir',\r\n                                                            allowOutsideClick: false,\r\n                                                            showCloseButton: true\r\n                                                }\r\n                                            )\r\n                                            return\r\n                                        }else{\r\n                                            \r\n                                            let contractType='';\r\n                                            Swal.fire({\r\n                                                title: '<div class=\"big-square\"></div>'+\r\n                                                '<div class=\"little-square\"></div>'+\r\n                                                '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\">Por favor elija el tipo de contrato.</div></div>',\r\n                                                denyButtonColor: '#0A9B91',\r\n                                                confirmButtonText: 'Ejecuta',\r\n                                                denyButtonText: 'Suscribió',\r\n                                                allowOutsideClick: false,\r\n                                                showDenyButton: true,\r\n\r\n                                                showCloseButton: true\r\n                                            })\r\n                                            .then((result) => {\r\n                                                if (result.isConfirmed) {\r\n                                                    contractType='Ejecuta';\r\n                                                    var newContratos=this.state.contratos;\r\n                                                    newContratos.map((response,i)=>{\r\n                                                        \r\n                                                        if(response.id===this.state.selectedContracts.id){\r\n                                                            newContratos.splice(i,1);\r\n                                                            this.setState({\r\n                                                                contratos:newContratos\r\n                                                            });\r\n                                                        }\r\n                                                    })\r\n                                                    this.props.add(this.state.selectedContracts,contractType);\r\n                                                    this.setState({\r\n                                                        selectedContracts : null\r\n                                                    },this.setInactive());\r\n                                                }else if(result.isDenied){\r\n                                                    \r\n                                                    contractType='Suscribio';\r\n                                                    var newContratos=this.state.contratos;\r\n                                                    newContratos.map((response,i)=>{\r\n                                                        if(response.id===this.state.selectedContracts.id){\r\n                                                            newContratos.splice(i,1);\r\n                                                            this.setState({\r\n                                                                contratos:newContratos\r\n                                                            });\r\n                                                        }\r\n                                                    })\r\n                                                    this.props.add(this.state.selectedContracts,contractType);\r\n                                                    this.setState({\r\n                                                        selectedContracts : null\r\n                                                    },this.setInactive());\r\n                                                }\r\n\r\n                                            });\r\n                                        }\r\n                                    }}>\r\n                                        <div className=\"btn-label absolute-center\">Agregar contrato</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n              </div>\r\n               \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default ContractSearch;","import './ContractorData.css';\r\nimport React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Global from '../Global';\r\nimport {io} from 'socket.io-client';\r\nimport Swal from 'sweetalert2';\r\nimport ContractSearch from '../contract-search/ContractSeach';\r\n\r\nclass ContractorData extends Component{\r\n    \r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.url = Global.url; \r\n        this.ws = Global.ws;\r\n        this.socket = null;\r\n        this.contractorData= null;\r\n        this.passRemove = React.createRef();\r\n        this.state ={\r\n            user : {\r\n                name: '',\r\n                pass: ''\r\n            },\r\n            status: null,\r\n            contractor: {},\r\n            relatedContracts: [],\r\n            loadedContracts: false\r\n        };\r\n    }\r\n    componentWillMount(){\r\n        //this.veryfyUserSesion();\r\n        this.getContractor();\r\n    }\r\n    connectSocket = () =>{\r\n        this.socket = (io(this.ws));\r\n    }\r\n    getUser = (id) => {\r\n        axios.get(this.url+'get-admin/'+id)\r\n        .then(res => {\r\n            this.setState({\r\n                user: res.data.data\r\n            });\r\n        })\r\n    }\r\n\r\n    veryfyUserSesion = () =>{\r\n        const sesionToken = localStorage.getItem('userSesion');\r\n        axios.get(this.url+'auth-user', {\r\n            headers:{\r\n                'x-acces-token':sesionToken\r\n            }\r\n        })\r\n        .then(\r\n            res => {\r\n                if(res.data.status !== 'Ok'){\r\n                    Swal.fire({\r\n                        title: '<div class=\"big-square\"></div>'+\r\n                        '<div class=\"little-square\"></div>'+\r\n                        '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\"><p>Para acceder a esta funcionalidad debe iniciar sesión.</p></div></div>',\r\n                        confirmButtonText: 'Seguir',\r\n                        allowOutsideClick: false,\r\n                        showCloseButton: true\r\n                    }).then(()=>{\r\n                        this.props.history.push('/login');\r\n                    })\r\n                }else{\r\n                    this.getUser(res.data.data.id);\r\n                    this.connectSocket();\r\n                }\r\n            },\r\n            error =>{\r\n                Swal.fire({\r\n                    title: '<div class=\"big-square\"></div>'+\r\n                    '<div class=\"little-square\"></div>'+\r\n                    '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\"><p>Está ingresando como usuario externo. Podrá visualizar, pero no editar información.</p></div></div>',\r\n                    confirmButtonText: 'Seguir',\r\n                    allowOutsideClick: false,\r\n                    showCloseButton: true\r\n                })\r\n            }\r\n        )\r\n    }\r\n    getContractor = () =>{\r\n        axios.get(this.url+'get-contractor/'+this.props.contractorId)\r\n        .then(res => {\r\n            this.setState({\r\n                contractor: res.data.data\r\n            },()=>{\r\n                this.contractorData=this.state.contractor;\r\n            });\r\n            axios.get(this.url+'get-contracts/'+this.state.contractor.id)\r\n            .then(res =>{ \r\n                this.setState({\r\n                    relatedContracts: res.data.data,\r\n                    loadedContracts: true\r\n                });\r\n                \r\n            })\r\n        })\r\n    }\r\n    addContract = (data,type) =>{\r\n        this.props.pdfData(data,type)\r\n        //Validar la relacion del usuario y el usuario del contrato\r\n    }\r\n    removeContract = (data) =>{\r\n        this.passRemove.current.removeContract(data);\r\n    }\r\n\r\n\r\n    render(){\r\n       \r\n        /*if(this.state.status==='succes'){\r\n            return (\r\n                <Redirect to=\"/user-home\"/>\r\n            )\r\n        }*/\r\n        var user=this.props.user;\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"row content-user-data no-gutters\">\r\n                    <div className=\"col-lg-12 h-100\">\r\n                        \r\n                        <div className=\"row h-10 align-items-center justify-content-center\">\r\n                            <div className=\"title-label-form\">Información del contratista</div>\r\n                        </div>\r\n                        <div className=\"row h-25 mh-35 align-items-center\">\r\n                            <div className=\"item-container col-lg-12\">\r\n                                <div className=\"item-label\">Nombre</div>\r\n                                <div className=\"item-data\">\r\n                                    <div className=\"text-data absolute-center\">\r\n                                        {this.state.contractor.name}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-container col-lg-12\">\r\n                                <div className=\"item-label\">Correo</div>\r\n                                <div className=\"item-data\">\r\n                                    <div className=\"text-data absolute-center\">\r\n                                        {this.state.contractor.email}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row h-25 mh-35 align-items-center\">\r\n                            <div className=\"item-container col-lg-12\">\r\n                                <div className=\"item-label\">Identificación</div>\r\n                                <div className=\"item-data\">\r\n                                    <div className=\"text-data absolute-center\">\r\n                                        {this.state.contractor.identification}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-container col-lg-12\">\r\n                                <div className=\"item-label\">Teléfono</div>\r\n                                <div className=\"item-data\">\r\n                                    <div className=\"text-data absolute-center\">\r\n                                        {this.state.contractor.telephone}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    user!==undefined && user!==null &&\r\n                    <div className=\"row contract-list-container no-gutters\">\r\n                        {\r\n                            this.state.loadedContracts &&     \r\n                                <ContractSearch\r\n                                    ref = {this.passRemove}\r\n                                    add = {this.addContract}\r\n                                    contractsRelated = {this.state.relatedContracts}\r\n                                />  \r\n                        }\r\n                    </div>       \r\n                }\r\n                        \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default ContractorData;","import './PayrollData.css';\r\nimport React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Global from '../Global';\r\nimport {io} from 'socket.io-client';\r\n\r\nclass PayrollData extends Component{\r\n    \r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.url = Global.url; \r\n        this.ws = Global.ws;\r\n        this.socket = null;\r\n        this.state ={\r\n            user : {\r\n                name: '',\r\n                pass: ''\r\n            },\r\n            status: null,\r\n            payroll: {},\r\n            dependencia:''\r\n        };\r\n    }\r\n    componentWillMount(){\r\n        this.getPayroll();\r\n    }\r\n    connectSocket = () =>{\r\n        this.socket = (io(this.ws));\r\n    }\r\n    getUser = (id) => {\r\n        axios.get(this.url+'get-admin/'+id)\r\n        .then(res => {\r\n            this.setState({\r\n                user: res.data.data\r\n            });\r\n        })\r\n    }\r\n    getPayroll = () =>{\r\n        axios.get(this.url+'get-payroll/'+this.props.payrollId)\r\n        .then(res => {\r\n            this.setState({\r\n                payroll: res.data.data\r\n            });\r\n            axios.get(this.url+'get-dependency/'+this.state.payroll.dependency)\r\n            .then(res =>{ \r\n                this.setState({\r\n                    dependencia: res.data.data.name\r\n                });\r\n                \r\n            })\r\n        })\r\n    }\r\n    render(){\r\n       \r\n        /*if(this.state.status==='succes'){\r\n            return (\r\n                <Redirect to=\"/user-home\"/>\r\n            )\r\n        }*/\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"row content-user-data no-gutters\">\r\n                    <div className=\"col-lg-12 h-100\">\r\n                        \r\n                        <div className=\"row h-10 align-items-center justify-content-center\">\r\n                            <div className=\"title-label-form\">Información nómina</div>\r\n                        </div>\r\n                        <div className=\"row h-60 mh-90 align-items-center\">\r\n                            <div className=\"item-container col-lg-12\">\r\n                                <div className=\"item-label\">Nombre</div>\r\n                                <div className=\"item-data\">\r\n                                    <div className=\"text-data absolute-center\">\r\n                                        {this.state.payroll.name}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-container col-lg-12\">\r\n                                <div className=\"item-label\">Apellido</div>\r\n                                <div className=\"item-data\">\r\n                                    <div className=\"text-data absolute-center\">\r\n                                        {this.state.payroll.first_surname}{' '}{this.state.payroll.second_surname}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-container col-lg-12\">\r\n                                <div className=\"item-label\">Identificación</div>\r\n                                <div className=\"item-data\">\r\n                                    <div className=\"text-data absolute-center\">\r\n                                        {this.state.payroll.identification}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-container col-lg-12\">\r\n                                <div className=\"item-label\">Expedición</div>\r\n                                <div className=\"item-data\">\r\n                                    <div className=\"text-data absolute-center\">\r\n                                        {this.state.payroll.expedition_place}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-container col-lg-12\">\r\n                                <div className=\"item-label\">Salario</div>\r\n                                <div className=\"item-data\">\r\n                                    <div className=\"text-data absolute-center\">\r\n                                        {this.state.payroll.salary}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item-container col-lg-12\">\r\n                                <div className=\"item-label\">Dependencia</div>\r\n                                <div className=\"item-data\">\r\n                                    <div className=\"text-data absolute-center\">\r\n                                        {this.state.dependencia}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div> \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default PayrollData;","export default __webpack_public_path__ + \"static/media/Roboto-Regular.a8d6ac03.ttf\";","export default __webpack_public_path__ + \"static/media/Roboto-Bold.75371f53.ttf\";","import './NewDetails.css';\r\nimport React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Global from '../Global';\r\nimport Swal from 'sweetalert2';\r\nimport {io} from 'socket.io-client';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport CreatePDF from '../createPDF/CreatePDF';\r\nimport CreatePDFPayroll from '../createPDFPayroll/CreatePDFPayroll';\r\nimport ContractorData from '../contractorData/ContractorData';\r\nimport PayrollData from '../payrollData/PayrollData';\r\nimport { PDFViewer } from '@react-pdf/renderer';\r\nimport { BlobProvider, Page, Text, View, Document, StyleSheet, Image, Font, Link } from '@react-pdf/renderer';\r\nimport ReactDOM from 'react-dom';\r\nimport logo from '../../assets/images/metrolinea-logo.png';\r\nimport Roboto from '../../assets/fonts/Roboto-Regular.ttf';\r\nimport RobotoBold from '../../assets/fonts/Roboto-Bold.ttf';\r\nimport QRCode from 'qrcode';\r\n\r\nclass NewDetails extends Component{\r\n    /**\r\n     * get id from url\r\n     * or get props from parent\r\n     * \r\n     */\r\n    newStateRef = React.createRef();\r\n    \r\n      \r\n      // Create Document Component\r\n     \r\n    constructor(props){\r\n        super(props);\r\n        Font.register({ family: 'Roboto', src: Roboto });\r\n        Font.register({ family: 'Roboto-Bold', src: RobotoBold });\r\n        this.date = null;\r\n        this.passData = React.createRef();\r\n        \r\n        this.passDataPayroll = React.createRef();\r\n        this.payRollRef = React.createRef();\r\n        this.contractorRef = React.createRef();\r\n        this.userData = React.createRef();\r\n        this.mailForm={};\r\n        this.paramId= this.props.match.params.id;\r\n        this.url = Global.url;\r\n        this.urlFront = Global.url_front;\r\n        this.ws = Global.ws;\r\n        this.socket = null;\r\n        this.styles = StyleSheet.create({\r\n            page: {\r\n              backgroundColor: 'white',\r\n              padding:'20px 25px 80px 25px',\r\n              width:'100%',\r\n              height: '100%',\r\n              position:'relative',\r\n            },\r\n            section: {\r\n              margin: 10,\r\n              padding: 10,\r\n              flexGrow: 1\r\n            },\r\n            metrolineaImage:{\r\n                width:'120px',\r\n                height:'100px',\r\n                backgroundSize:'100%'\r\n            },\r\n            qrContainer:{\r\n                position: 'relative',\r\n                height:'200px',\r\n                width:'100%'\r\n            },\r\n            metrolineaQR:{\r\n                width:'120px',\r\n                height:'120px',\r\n                backgroundSize:'100%',\r\n                position:'absolute',\r\n                transform:'translate(-50%, 0)',\r\n                left:'50%',\r\n                top:'40px'\r\n            },\r\n            header:{\r\n                display:'flex',\r\n                flexDirection:'row',\r\n                height: '80px',\r\n                borderBottom: '1px solid yellow',\r\n                marginBottom:'10px'\r\n            },\r\n            body:{\r\n                height:'auto',\r\n                width:'100%',\r\n                padding:'0 50px'\r\n            },\r\n            footer:{\r\n                height:'100%',\r\n                width:'100%',\r\n                position:'absolute',\r\n                top:'80px',\r\n                left:'25px'\r\n            },\r\n            footerContent:{\r\n                position:'absolute',\r\n                height:'60px',\r\n                width:'100%',\r\n                bottom:'0',\r\n                left:'0',\r\n                borderTop: '1px solid yellow',\r\n                paddingTop:'10px'\r\n            },\r\n            left:{\r\n                margin: 10,\r\n                padding: 10,\r\n                flexGrow: 1\r\n            },\r\n            rigth:{\r\n                margin: 10,\r\n                padding: 10,\r\n                flexGrow: 1,\r\n                flexDirection:'row',\r\n                justifyContent:'flex-end',\r\n                alignItems:'center'\r\n            },\r\n            text1:{\r\n                fontSize:'10px'\r\n            },\r\n            text2:{\r\n                fontSize:'13px',\r\n                fontFamily:'Roboto-Bold',\r\n            },\r\n            fo:{\r\n                textAlign:'right',\r\n                fontSize:'14px',\r\n                width:'80px',\r\n                height:'20px',\r\n            },\r\n            title:{\r\n                textAlign:'center',\r\n                padding:'10px 0',\r\n                textTransform:'uppercase',\r\n                fontFamily:'Roboto-Bold',\r\n            },\r\n            justifyP:{\r\n                textAlign:'justify',\r\n                fontSize:'14px',\r\n                marginBottom:'10px'\r\n            },\r\n            boldP:{\r\n                display:'inline-block',\r\n                fontFamily:'Roboto',\r\n                fontWeight:'bold',\r\n                fontSize:'14px',\r\n                float:'left',\r\n                textAlign:'justify'\r\n            },\r\n            flexRow:{\r\n                width:'100%',\r\n                flexDirection:'row',\r\n                fontSize:'14px',\r\n                marginBottom:'5px',\r\n                marginTop: '5px'\r\n            },\r\n            col1:{\r\n                width: '40%',\r\n                fontSize:'13px',\r\n                fontFamily:'Roboto-Bold'\r\n            },\r\n            col2:{\r\n                width: '60%',\r\n                textAlign:'justify'   \r\n            },\r\n            fullWidthText:{\r\n                marginBottom:'10px',\r\n                marginTop: '10px'\r\n            },\r\n            contractTitle:{\r\n                marginTop: '10px',\r\n            },\r\n            footerText:{\r\n                textAlign:'center',\r\n                fontSize:'10px',\r\n            },\r\n            footerTextContainer:{\r\n                height: '10px',\r\n                flexGrow: '1'\r\n            },\r\n            contractData:{\r\n                marginBottom:'10px'\r\n            },\r\n            boldC:{\r\n                display:'inline-block',\r\n                fontFamily:'Roboto-Bold',\r\n                fontSize: '14px',\r\n                textAlign:'justify'\r\n            }\r\n        });\r\n        this.state ={\r\n            form: {},\r\n            status: null,\r\n            user: null,\r\n            formQR: null,\r\n            showPdf: false,\r\n            prevPdfState: false,\r\n            previewPDF: false,\r\n            prevPdfObject:null,\r\n            blobPDF:false,\r\n            pdfValues:{\r\n                formId: 0,\r\n                pdfInfo: {},\r\n                pdfName:''\r\n\r\n            },\r\n            pdfString:'',\r\n            removedContract: {},\r\n            contratos: {\r\n                ejecuta: [],\r\n                suscribio:[]\r\n            }\r\n        };\r\n    }\r\n    generateQrCode = async (id) =>{\r\n        try {\r\n            const res = await QRCode.toDataURL(this.urlFront+'new-details/'+id);\r\n            this.formQR=res;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    dateFormat = (data , type) =>{\r\n        var date ={};\r\n        let month=data.getMonth();\r\n        let year=data.getFullYear();\r\n        let dayString=data.getDay();\r\n        let day=data.getDate();\r\n        date.year= year;\r\n        date.monthString= this.setMonth(month);\r\n        date.calendarDay=day;\r\n        date.dayString= this.setDay(dayString);\r\n        date.dayCalendarString= this.decenas(day);\r\n        if(type){\r\n            if(date.dayCalendarString==='un'){\r\n                date.dayCalendarString='primero';\r\n            }\r\n        }\r\n        return date\r\n    }\r\n    setMonth =(data) => {\r\n        var monthString;\r\n        switch (data) {\r\n            case 0:\r\n                monthString='Enero'\r\n            break;\r\n            case 1:\r\n                monthString='Febrero'\r\n            break;\r\n            case 2:\r\n                monthString='Marzo'\r\n            break;\r\n            case 3:\r\n                monthString='Abril'\r\n            break;\r\n            case 4:\r\n                monthString='Mayo'\r\n            break;\r\n            case 5:\r\n                monthString='Junio'\r\n            break;\r\n            case 6:\r\n                monthString='Julio'\r\n            break;\r\n            \r\n            case 7:\r\n                monthString='Agosto'\r\n            break;\r\n            \r\n            case 8:\r\n                monthString='Septiembre'\r\n            break;\r\n            \r\n            case 9:\r\n                monthString='Octubre'\r\n            break;\r\n            \r\n            case 10:\r\n                monthString='Noviembre'\r\n            break;\r\n            \r\n            case 11:\r\n                monthString='Diciembre'\r\n            break;\r\n        }  \r\n        return monthString\r\n    }\r\n    setDay =(data) => {\r\n        var dayString;\r\n        switch (data) {\r\n            case 0:\r\n                dayString='Domingo'\r\n            break;\r\n            case 1:\r\n                dayString='Lunes'\r\n            break;\r\n            case 2:\r\n                dayString='Martes'\r\n            break;\r\n            case 3:\r\n                dayString='Miércoles'\r\n            break;\r\n            case 4:\r\n                dayString='Jueves'\r\n            break;\r\n            case 5:\r\n                dayString='Viernes'\r\n            break;\r\n            case 6:\r\n                dayString='Sábado'\r\n            break;\r\n        }  \r\n        return dayString\r\n    }\r\n    decenas=(num)=>{\r\n        var decena = Math.floor(num/10);\r\n        var unidad = num-(decena * 10);\r\n        switch(decena)\r\n        {\r\n            case 1:\r\n                switch(unidad)\r\n                {\r\n                    case 0: return 'diez';\r\n                    case 1: return 'once';\r\n                    case 2: return 'doce';\r\n                    case 3: return 'trece';\r\n                    case 4: return 'catorce';\r\n                    case 5: return 'quince';\r\n                    default: return 'dieci' + this.unidades(unidad);\r\n                }\r\n            case 2:\r\n                switch(unidad)\r\n                {\r\n                    case 0: return 'veinte';\r\n                    default: return 'veinti' + this.unidades(unidad);\r\n                }\r\n            case 3: return this.decenasY('treinta', unidad);\r\n            case 4: return this.decenasY('cuarenta', unidad);\r\n            case 5: return this.decenasY('cincuenta', unidad);\r\n            case 6: return this.decenasY('sesenta', unidad);\r\n            case 7: return this.decenasY('setenta', unidad);\r\n            case 8: return this.decenasY('ochenta', unidad);\r\n            case 9: return this.decenasY('noventa', unidad);\r\n            case 0: return this.unidades(unidad);\r\n        }\r\n    }\r\n    decenasY = (strSin, numUnidades) =>{\r\n        if (numUnidades > 0)\r\n        return strSin + ' y ' + this.unidades(numUnidades)\r\n    \r\n        return strSin;\r\n    }\r\n    unidades = (num) => {\r\n        switch(num)\r\n        {\r\n            case 1: return 'un';\r\n            case 2: return 'dos';\r\n            case 3: return 'tres';\r\n            case 4: return 'cuatro';\r\n            case 5: return 'cinco';\r\n            case 6: return 'seis';\r\n            case 7: return 'siete';\r\n            case 8: return 'ocho';\r\n            case 9: return 'nueve';\r\n        }\r\n        return '';\r\n    }\r\n    viewPrevPDf = ()=>{\r\n        \r\n        axios({\r\n            method: 'POST',\r\n            data: this.state.form,\r\n            url: this.url+\"download-prev-stamp\",\r\n            responseType: 'blob'\r\n        })\r\n        .then(response => {\r\n            const file = new Blob(\r\n            [response.data], \r\n            {type: 'application/pdf'});\r\n\r\n            const fileURL = URL.createObjectURL(file);\r\n            if(window.innerWidth>=768){\r\n                window.open(fileURL,\"v-pdf\");\r\n            }else{\r\n                window.open(fileURL);\r\n                this.setState({\r\n                    blobPDF: false\r\n                })\r\n            }\r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n       \r\n    }    \r\n    prevBlobPDF = async (data,observ,mail) =>{\r\n        const pdfValues=this.state.pdfValues;\r\n        var user,pdfInfo;\r\n        debugger\r\n        if(data===1){\r\n            \r\n            user=this.userData.current.state.payroll;\r\n            var today=new Date();\r\n            this.date=new Date(user.admission_date);\r\n            this.date.setDate(this.date.getDate() + 1);\r\n            this.date=this.dateFormat(this.date, 1);\r\n            var desde=this.dateFormat(today, 0);\r\n            user.fecha=this.date;\r\n            user.today=desde;\r\n            user.observations=observ.current !==null ? observ.current.value:'';\r\n            debugger\r\n            pdfValues.pdfName=this.state.form.id+user.name+'.pdf';\r\n            pdfValues.formId=this.state.form.id;\r\n            \r\n            pdfInfo={\r\n                user:user,\r\n                contracts: '',\r\n                data:data\r\n            };\r\n            pdfValues.pdfInfo=pdfInfo;\r\n            pdfValues.qr=this.formQR;\r\n            var updateForm={\r\n                id:this.state.form.id,\r\n                pdf_string:this.state.form.id+user.name+'.pdf'\r\n            }\r\n            axios.post(this.url+'create-pdf', this.state.pdfValues)\r\n            .then(res => {\r\n                axios.put(this.url+'add-stamp',updateForm).then(res =>{\r\n                    this.setState({\r\n                        pdfString:updateForm.pdf_string\r\n                    },()=>{\r\n                        mail.data=this.state.pdfString;\r\n                        axios.post(this.url+\"mail\",mail)\r\n                        .then( res => {\r\n                            \r\n                            this.updateForm();\r\n                            this.backToNews();\r\n                        });\r\n                    })\r\n                })\r\n            })\r\n        }else if(data===0){\r\n            user=this.contractorRef.current.contractorData;\r\n            pdfInfo={\r\n                user:user,\r\n                contracts: this.state.contratos,\r\n                data:data\r\n            };\r\n            pdfValues.pdfInfo=pdfInfo;\r\n            pdfValues.pdfName=this.state.form.id+user.name+'.pdf';\r\n            pdfValues.formId=this.state.form.id;\r\n            \r\n            pdfValues.qr=this.formQR;\r\n            updateForm={\r\n                id:this.state.form.id,\r\n                pdf_string:this.state.form.id+user.name+'.pdf'\r\n            }\r\n            axios.post(this.url+'create-pdf', this.state.pdfValues)\r\n            .then(res => {\r\n                    axios.put(this.url+'add-stamp',updateForm).then(res =>{\r\n                    this.setState({\r\n                        pdfString:updateForm.pdf_string\r\n                    },()=>{\r\n                        mail.data=this.state.pdfString;\r\n                        mail.qr=this.formQR;\r\n                        axios.post(this.url+\"mail\",mail)\r\n                        .then( res => {\r\n                            \r\n                            this.updateForm();\r\n                            this.backToNews();\r\n                        });\r\n                    })\r\n\r\n                })\r\n            })\r\n        }\r\n    }\r\n    prevPdfObjectFunc= (data)=>{\r\n        debugger\r\n        this.prevBlobPDF(this.state.form.request_type, this.passDataPayroll.current === null? '': this.passDataPayroll.current.observData,data).then(()=>{\r\n            \r\n        });\r\n    }\r\n    prevPDF = async (data, observ) =>{\r\n        this.setState({\r\n            prevPdfState: true\r\n        });\r\n        if(data===1){\r\n            var user=this.userData.current.state.payroll;\r\n            var today=new Date();\r\n            this.date=new Date(user.admission_date);\r\n            this.date.setDate(this.date.getDate() + 1);\r\n            this.date=this.dateFormat(this.date, 1);\r\n            var desde=this.dateFormat(today, 0);\r\n            user.fecha=this.date;\r\n            user.today=desde;\r\n            user.observations=observ.current !==null ? observ.current.value:'';\r\n            this.setState({previewPDF:true},()=>{\r\n                const Carta = () => (\r\n                        <Document>\r\n                            <Page size=\"A4\" style={this.styles.page}>\r\n                                <View fixed style={this.styles.header}>\r\n                                    <View style={this.styles.left}>\r\n                                        <View>\r\n                                            <Image\r\n                                                style={this.styles.metrolineaImage}\r\n                                                src={logo}\r\n                                            />\r\n                                        </View>\r\n                                        <Text style={this.styles.text1}>Nit.830.507.387-3</Text>\r\n                                    </View>\r\n                                    <View style={this.styles.rigth}>\r\n                                        <View style={this.styles.fo}>\r\n                                            <Text style={this.styles.text2}>20-23.1.1.F0</Text>\r\n                                        </View>\r\n                                    </View>\r\n                                </View>\r\n                                <View style={this.styles.body}>\r\n                                    {\r\n                                        //Titulo\r\n                                    }\r\n                                    <View style={this.styles.mainTitle}>\r\n                                        <Text style={this.styles.title}>Constancia</Text>\r\n                                    </View>\r\n                                    {\r\n                                        //Encabezado\r\n                                    }\r\n                                    <View style={this.styles.fullWidthText}>\r\n                                        <Text style={this.styles.justifyP}>\r\n                                            La suscrita Profesional Universitario I Talento Humano, de la Sociedad Metrolinea\r\n                                            S. A. hace constar que:\r\n                                        </Text>\r\n                                    </View>\r\n                                    <View>\r\n                                        <View style={this.styles.fullWidthText}>\r\n                                            <Text style={this.styles.boldP}>{user.name} {user.first_surname} {user.second_surname}, \r\n                                            identificado con la cédula de ciudadanía No. {user.identification} expedida en {user.expedition_place}, \r\n                                            labora en esta empresa desde el día  {user.fecha.dayCalendarString} ({user.fecha.calendarDay}) de {user.fecha.monthString} de {user.fecha.year}, mediante contrato a término {user.contract_name}, en el cargo de {user.job_name}, de la Sociedad Metrolinea S. A.\r\n                                            </Text>\r\n                                        </View>\r\n                                        <View style={this.styles.contractData}>\r\n                                            <View style={this.styles.flexRow}>\r\n                                                <Text style={this.styles.col1}>\r\n                                                    Salario:  \r\n                                                </Text>\r\n                                                <Text style={this.styles.col2}>${user.salary}\r\n\r\n                                                </Text>\r\n                                            </View>\r\n                                            \r\n                                        </View>\r\n                                    </View>\r\n                                    <View style={this.styles.fullWidthText}>\r\n                                        <Text style={this.styles.justifyP}>\r\n                                            Se expide a solicitud del interesado, en la ciudad de Bucaramanga a {user.today.dayCalendarString} ({user.today.calendarDay}) día(s) del mes de {user.today.monthString} de {user.today.year}. Se adhiere y anula el recibo de \r\n                                            compra de estampilla Pro Hospitales por valor de tres mil pesos m/cte. ($3.000) y \r\n                                            Ordenanza por valor de Trescientos pesos mcte ($300).\r\n\r\n                                        </Text>\r\n                                    </View>\r\n                                    {\r\n                                        //obsevaciones\r\n                                        user.observations!==''&&\r\n                                        <View>\r\n                                            <View style={this.styles.fullWidthText}>\r\n                                                <Text style={this.styles.boldC}>\r\n                                                Observaciones:\r\n                                                </Text>\r\n                                                <Text style={this.styles.justifyP}>\r\n                                                    {user.observations}\r\n                                                </Text>\r\n                                            </View>\r\n                                            <View style={this.styles.fullWidthText}>\r\n                                                <Text style={this.styles.justifyP}>\r\n                                                Cordialmente,\r\n\r\n                                                </Text>\r\n                                            </View>    \r\n                                        </View>\r\n                                    }\r\n                                    <View style={this.styles.qrContainer}>\r\n                                        <View style={this.styles.mainTitle}>\r\n                                            <Text style={this.styles.title}>QR del certificado</Text>\r\n                                        </View>\r\n                                        <Image\r\n                                            style={this.styles.metrolineaQR}\r\n                                            src={this.formQR}\r\n                                        />\r\n                                    </View>  \r\n                                   \r\n                                </View>\r\n                                <View fixed style={this.styles.footer}>\r\n                                    <View style={this.styles.footerContent}>\r\n                                        <View style={this.styles.footerTextContainer}>\r\n                                            <Text style={this.styles.footerText}>Autopista Floridablanca N° 86-30, Estación Provenza Occidental, Barrio Diamante II</Text>\r\n                                        </View>\r\n                                        <View style={this.styles.footerTextContainer}>\r\n                                            <Text style={this.styles.footerText}>Teléfono: 6929824 Bucaramanga.</Text>\r\n                                        </View>\r\n                                        <View style={this.styles.footerTextContainer}>\r\n                                            <Link src='www.metrolinea.gov.co' style={this.styles.footerText}>www.metrolinea.gov.co</Link>\r\n                                        </View>\r\n                                    </View>\r\n                                </View>\r\n                            </Page>\r\n                        </Document>\r\n                );\r\n                if(window.innerWidth>=768){\r\n                    ReactDOM.render(<PDFViewer><Carta /></PDFViewer>, document.getElementById('viewer'),async ()=>{\r\n                    });\r\n                }else{\r\n                    <BlobProvider document={Carta}>\r\n                    {({ url }) => (\r\n                      <a href={url} target=\"_blank\">Open in new tab</a>\r\n                    )}\r\n                  </BlobProvider>\r\n                }\r\n                \r\n            });\r\n        }else if(data===0){\r\n            user=this.contractorRef.current.contractorData;\r\n            this.setState({previewPDF:true},()=>{\r\n                const Carta = () => (\r\n                        <Document>\r\n                            <Page size=\"A4\" style={this.styles.page}>\r\n                                <View fixed style={this.styles.header}>\r\n                                    <View style={this.styles.left}>\r\n                                        <View>\r\n                                            <Image\r\n                                                style={this.styles.metrolineaImage}\r\n                                                src={logo}\r\n                                            />\r\n                                        </View>\r\n                                        <Text style={this.styles.text1}>Nit.830.507.387-3</Text>\r\n                                    </View>\r\n                                    <View style={this.styles.rigth}>\r\n                                        <View style={this.styles.fo}>\r\n                                            <Text style={this.styles.text2}>20-23.1.1.F0</Text>\r\n                                        </View>\r\n                                    </View>\r\n                                </View>\r\n                                <View style={this.styles.body}>\r\n                                    {\r\n                                        //Titulo\r\n                                    }\r\n                                    <View style={this.styles.mainTitle}>\r\n                                        <Text style={this.styles.title}>Constancia</Text>\r\n                                    </View>\r\n                                    {\r\n                                        //Encabezado\r\n                                    }\r\n                                    <View style={this.styles.fullWidthText}>\r\n                                        <Text style={this.styles.justifyP}>La suscrita Profesional Universitario I Talento Humano, de la Sociedad Metrolinea\r\n                                            S. A. hace constar que:\r\n                                        </Text>\r\n                                    </View>\r\n                                    {\r\n                                        //CONTRATOS\r\n                                        this.state.contratos.ejecuta.length >=1 && \r\n                                                //Info del Usuario\r\n                                            <View>\r\n                                                <View style={this.styles.fullWidthText}>\r\n                                                    <Text style={this.styles.boldP}>{user.name}, identificado con la cédula de ciudadanía No. {user.identification} , ejecuta con Metrolínea S.A., el siguiente CONTRATO DE PRESTACION DE SERVICIOS PROFESIONALES:\r\n                                                    </Text>\r\n                                                </View>\r\n                                                <View>\r\n                                                    {\r\n                                                        this.state.contratos.ejecuta.map((contract, i) =>{\r\n                                                            var bDate,fDate;\r\n                                                            bDate= new Date(contract.date);\r\n                                                            fDate= new Date(contract.finish_date);\r\n                                                            bDate = bDate.getDate() + \"-\" + (bDate.getMonth() +1) + \"-\" + bDate.getFullYear();\r\n                                                            fDate = fDate.getDate() + \"-\" + (fDate.getMonth() +1) + \"-\" + fDate.getFullYear();\r\n                                                            this.state.contratos.ejecuta[i].fDate=fDate;\r\n                                                            this.state.contratos.ejecuta[i].bDate=bDate;\r\n                                                            return(\r\n                                                                <View  style={this.styles.contractData}>\r\n                                                                    <View style={this.styles.contractTitle}>\r\n                                                                        <Text style={this.styles.boldC}>{contract.contract_name} No. {contract.contract_number} de {contract.year}\r\n                                                                        </Text>\r\n                                                                    </View>\r\n            \r\n                                                                    <View style={this.styles.fullWidthText}>\r\n                                                                        <Text style={this.styles.boldC}>OBJETO: \r\n                                                                        </Text>\r\n                                                                        \r\n                                                                        <Text style={this.styles.boldP}>{contract.object}\r\n                                                                        </Text>\r\n                                                                    </View>\r\n                                                                    \r\n                                                                    <View style={this.styles.flexRow}>\r\n                                                                        <Text style={this.styles.col1}>\r\n                                                                            VALOR DEL CONTRATO:  \r\n                                                                        </Text>\r\n                                                                        <Text style={this.styles.col2}>\r\n                                                                        {contract.value_string}(${contract.value})\r\n            \r\n                                                                        </Text>\r\n                                                                    </View>\r\n                                                                    <View style={this.styles.flexRow}>\r\n                                                                        <Text style={this.styles.col1}>\r\n                                                                            PLAZO DE CONTRATO:  \r\n                                                                        </Text>\r\n                                                                        <Text style={this.styles.col2}>\r\n                                                                            {contract.execution_time}\r\n            \r\n                                                                        </Text>\r\n                                                                    </View>\r\n                                                                    <View style={this.styles.flexRow}>\r\n                                                                        <Text style={this.styles.col1}>\r\n                                                                            INTERVENTOR:  \r\n                                                                        </Text>\r\n                                                                        <Text style={this.styles.col2}>\r\n                                                                            {contract.supervisor_name}\r\n            \r\n                                                                        </Text>\r\n                                                                    </View>\r\n                                                                    <View style={this.styles.flexRow}>\r\n                                                                        <Text style={this.styles.col1}>\r\n                                                                            FECHA DE INICIO:  \r\n                                                                        </Text>\r\n                                                                        <Text style={this.styles.col2}>\r\n                                                                            {contract.bDate}\r\n            \r\n                                                                        </Text>\r\n                                                                    </View>\r\n                                                                    <View style={this.styles.flexRow}>\r\n                                                                        <Text style={this.styles.col1}>\r\n                                                                            FECHA DE TERMINACIÓN:  \r\n                                                                        </Text>\r\n                                                                        <Text style={this.styles.col2}>\r\n                                                                            {contract.fDate}\r\n            \r\n                                                                        </Text>\r\n                                                                    </View>\r\n                                                                    {\r\n                                                                        contract.details !=='' &&\r\n                                                                        <View style={this.styles.flexRow}>\r\n                                                                            <Text style={this.styles.col1}>\r\n                                                                                DETALLES:  \r\n                                                                            </Text>\r\n                                                                            <Text style={this.styles.col2}>\r\n                                                                                {contract.details}\r\n            \r\n                                                                            </Text>\r\n                                                                        </View>\r\n                                                                    }\r\n                                                                </View>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </View>\r\n                                            </View>\r\n                                    }\r\n                                    {\r\n                                        //CONTRATOS\r\n                                        this.state.contratos.suscribio.length >=1 && \r\n                                                //Info del Usuario\r\n                                            <View>\r\n                                                <View style={this.styles.fullWidthText}>\r\n                                                    <Text style={this.styles.boldP}>{user.name}, identificado con la cédula de ciudadanía No. {user.identification}, suscribió con Metrolínea S.A., el siguiente CONTRATO DE PRESTACION DE SERVICIOS PROFESIONALES:\r\n                                                    </Text>\r\n                                                </View>\r\n                                                {\r\n                                                    this.state.contratos.suscribio.map((contract, i) =>{\r\n                                                            var bDate,fDate;\r\n                                                            bDate= new Date(contract.date);\r\n                                                            fDate= new Date(contract.finish_date);\r\n                                                            bDate = bDate.getDate() + \"-\" + (bDate.getMonth() +1) + \"-\" + bDate.getFullYear();\r\n                                                            fDate = fDate.getDate() + \"-\" + (fDate.getMonth() +1) + \"-\" + fDate.getFullYear();\r\n                                                            this.state.contratos.suscribio[i].fDate=fDate;\r\n                                                            this.state.contratos.suscribio[i].bDate=bDate;\r\n                                                        return(\r\n                                                            <View style={this.styles.contractData} Key={i}>\r\n                                                                <View style={this.styles.contractTitle}>\r\n                                                                    <Text style={this.styles.boldC}>{contract.contract_name} No. {contract.contract_number} de {contract.year}\r\n                                                                    </Text>\r\n                                                                </View>\r\n        \r\n                                                                <View style={this.styles.fullWidthText}>\r\n                                                                    <Text style={this.styles.boldC}>OBJETO: {contract.object}\r\n                                                                    </Text>\r\n                                                                </View>\r\n                                                                \r\n                                                                <View style={this.styles.flexRow}>\r\n                                                                    <Text style={this.styles.col1}>\r\n                                                                        VALOR DEL CONTRATO:  \r\n                                                                    </Text>\r\n                                                                    <Text style={this.styles.col2}>\r\n                                                                        {contract.value_string}(${contract.value})\r\n        \r\n                                                                    </Text>\r\n                                                                </View>\r\n                                                                <View style={this.styles.flexRow}>\r\n                                                                    <Text style={this.styles.col1}>\r\n                                                                        PLAZO DE CONTRATO:  \r\n                                                                    </Text>\r\n                                                                    <Text style={this.styles.col2}>\r\n                                                                        {contract.execution_time}\r\n        \r\n                                                                    </Text>\r\n                                                                </View>\r\n                                                                <View style={this.styles.flexRow}>\r\n                                                                    <Text style={this.styles.col1}>\r\n                                                                        INTERVENTOR:  \r\n                                                                    </Text>\r\n                                                                    <Text style={this.styles.col2}>\r\n                                                                        {contract.supervisor_name}\r\n        \r\n                                                                    </Text>\r\n                                                                </View>\r\n                                                                <View style={this.styles.flexRow}>\r\n                                                                    <Text style={this.styles.col1}>\r\n                                                                        FECHA DE INICIO:  \r\n                                                                    </Text>\r\n                                                                    <Text style={this.styles.col2}>\r\n                                                                        {contract.bDate}\r\n        \r\n                                                                    </Text>\r\n                                                                </View>\r\n                                                                <View style={this.styles.flexRow}>\r\n                                                                    <Text style={this.styles.col1}>\r\n                                                                        FECHA DE TERMINACIÓN:  \r\n                                                                    </Text>\r\n                                                                    <Text style={this.styles.col2}>\r\n                                                                        {contract.fDate}\r\n        \r\n                                                                    </Text>\r\n                                                                </View>\r\n                                                                {\r\n                                                                    contract.details !=='' &&\r\n                                                                    <View style={this.styles.flexRow}>\r\n                                                                        <Text style={this.styles.col1}>\r\n                                                                            DETALLES:  \r\n                                                                        </Text>\r\n                                                                        <Text style={this.styles.col2}>\r\n                                                                            {contract.details}\r\n        \r\n                                                                        </Text>\r\n                                                                    </View>\r\n                                                                }\r\n                                                            </View>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </View>\r\n                                    }   \r\n                                    \r\n                                    <View style={this.styles.qrContainer}>\r\n                                        <View style={this.styles.mainTitle}>\r\n                                            <Text style={this.styles.title}>QR del certificado</Text>\r\n                                        </View>\r\n                                        <Image\r\n                                            style={this.styles.metrolineaQR}\r\n                                            src={this.formQR}\r\n                                        />\r\n                                    </View>  \r\n                                </View>\r\n                                <View fixed style={this.styles.footer}>\r\n                                    <View style={this.styles.footerContent}>\r\n                                        <View style={this.styles.footerTextContainer}>\r\n                                            <Text style={this.styles.footerText}>Autopista Floridablanca N° 86-30, Estación Provenza Occidental, Barrio Diamante II</Text>\r\n                                        </View>\r\n                                        <View style={this.styles.footerTextContainer}>\r\n                                            <Text style={this.styles.footerText}>Teléfono: 6929824 Bucaramanga.</Text>\r\n                                        </View>\r\n                                        <View style={this.styles.footerTextContainer}>\r\n                                            <Link src='www.metrolinea.gov.co' style={this.styles.footerText}>www.metrolinea.gov.co</Link>\r\n                                        </View>\r\n                                    </View>\r\n                                </View>\r\n                            </Page>\r\n                        </Document>\r\n                );\r\n                if(window.innerWidth>=768){\r\n                    ReactDOM.render(<PDFViewer><Carta /></PDFViewer>, document.getElementById('viewer'),async ()=>{\r\n\r\n                    });\r\n                }else{\r\n                    <BlobProvider document={Carta}>\r\n                        {({ url }) => (\r\n                        <a href={url} target=\"_blank\">Open in new tab</a>\r\n                        )}\r\n                    </BlobProvider>\r\n                }\r\n            });\r\n        }\r\n       \r\n    }\r\n    componentWillMount(){\r\n        this.getFormById(this.paramId);\r\n        this.veryfyUserSesion();\r\n        this.generateQrCode(this.paramId);\r\n    }\r\n\r\n    getUser = (id) => {\r\n        axios.get(this.url+'get-admin/'+id)\r\n        .then(res => {\r\n            this.setState({\r\n                user: res.data.data\r\n            });\r\n        })\r\n    }\r\n\r\n    veryfyUserSesion = () =>{\r\n        const sesionToken = localStorage.getItem('userSesion');\r\n        axios.get(this.url+'auth-user', {\r\n            headers:{\r\n                'x-acces-token':sesionToken\r\n            }\r\n        })\r\n        .then(\r\n            res => {\r\n                if(res.data.status !== 'Ok'){\r\n                    Swal.fire({\r\n                        title: '<div class=\"big-square\"></div>'+\r\n                        '<div class=\"little-square\"></div>'+\r\n                        '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\">Está ingresando como usuario externo. Podrá visualizar, pero no editar información.</div></div>',\r\n                        confirmButtonText: 'Seguir',\r\n                        allowOutsideClick: false,\r\n                        showCloseButton: true\r\n                    }).then(()=>{\r\n                        this.props.history.push('/login');\r\n                    })\r\n                }else{\r\n                    this.getUser(res.data.data.id);\r\n                    this.connectSocket();\r\n                }\r\n            },\r\n            error =>{\r\n                Swal.fire({\r\n                    title: '<div class=\"big-square\"></div>'+\r\n                    '<div class=\"little-square\"></div>'+\r\n                    '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\">Está ingresando como usuario externo. Podrá visualizar, pero no editar información.</div></div>',\r\n                    confirmButtonText: 'Seguir',\r\n                    allowOutsideClick: false,\r\n                    showCloseButton: true\r\n                }).then(()=>{\r\n                    ;\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    backToNews = () => {\r\n        this.props.history.push('/news');\r\n    }\r\n\r\n    connectSocket = () =>{\r\n        this.socket = (io(this.ws));\r\n    }\r\n\r\n    setCheckedSocket = (res) =>{\r\n        this.socket.emit(\"set-checked-news\",res.data.data);\r\n    }\r\n\r\n    setUncheckedSocket = (res) =>{\r\n        this.socket.emit(\"set-unchecked-news\",res.data.data);\r\n    }\r\n\r\n    setCheckedForms = async () =>{\r\n        await axios.get(this.url+\"get-checked-forms\")\r\n            .then( res => {\r\n                this.setCheckedSocket(res);\r\n            });\r\n    }\r\n\r\n    setForms = async () =>{\r\n        await axios.get(this.url+\"get-unchecked-forms\")\r\n             .then( res => {\r\n                 this.setUncheckedSocket(res);\r\n             });\r\n     }\r\n\r\n    updateDataState = (data) => {\r\n        this.newStateRef= data;\r\n        var user=this.userData.current ? this.userData.current.state.payroll.id : this.contractorRef.current.contractorData ;\r\n        if(user===null || user===undefined  ){\r\n            if(this.newStateRef === 1){\r\n                Swal.fire({\r\n                    title: '<div class=\"big-square\"></div>'+\r\n                    '<div class=\"little-square\"></div>'+\r\n                    '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\">Lo sentimos, el usuario no se encuentra en los registros.</div></div>',\r\n                    denyButtonColor: '#0A9B91',\r\n                    confirmButtonText: 'Seguir',\r\n                    allowOutsideClick: false,\r\n                    showCloseButton: true\r\n                }).then(result => {\r\n                    return\r\n                })\r\n            }else{\r\n                Swal.fire({\r\n                    title: '<div class=\"big-square\"></div>'+\r\n                    '<div class=\"little-square\"></div>'+\r\n                    '<div class=\"bg-title-lit\"><div class=\"list-label pop absolute-center\">Especifique el motivo del rechazo de la solicitud.</div></div>'+\r\n                    '<textarea id=input-detail maxLength=\"250\" pattern=\"^[a-zA-Z ,.-]+\" ></textarea>',\r\n                    denyButtonColor: '#0A9B91',\r\n                    confirmButtonText: 'Enviar rechazo',\r\n                    allowOutsideClick: false,\r\n                    showCloseButton: true\r\n                }).then(result => {\r\n                    var val = document.getElementById('input-detail').value;\r\n                    if(val!==''){\r\n                        if (result.isConfirmed) {\r\n                            Swal.fire(\r\n                                {\r\n                                    title: '<div class=\"big-square\"></div>'+\r\n                                            '<div class=\"little-square\"></div>'+\r\n                                            '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\"><p>Este proceso es irreversible, se rechazará la petición de forma permanente.</p></div></div>',\r\n                                            confirmButtonText: 'Rechazar',\r\n                                            denyButtonText:'Cancelar',\r\n                                            denyButtonColor: '#0A9B91',\r\n                                            showDenyButton: true,\r\n                                            allowOutsideClick: false,\r\n                                            showCloseButton: true\r\n                                }\r\n                            ).then(res =>{\r\n                                if (res.isConfirmed) {\r\n                                               \r\n                                    this.updateForm(val);\r\n                                    this.mailForm.email=this.state.form.email;\r\n                                    this.mailForm.name=this.state.form.name;\r\n                                    this.mailForm.pdf={}\r\n                                    this.mailForm.mailState=0;\r\n                                    this.mailForm.denied=this.state.form.observations;\r\n                                    \r\n                                    this.mailForm.id=this.state.form.id;\r\n                                    axios.post(this.url+\"mail\",this.mailForm)\r\n                                    .then( res => {\r\n                                        Swal.fire(\r\n                                            {\r\n                                                title: '<div class=\"big-square\"></div>'+\r\n                                                        '<div class=\"little-square\"></div>'+\r\n                                                        '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\"><p>La solicitud ha sido rechazada.</p></div></div>',\r\n                                                        confirmButtonText: 'Seguir',\r\n                                                        denyButtonColor: '#0A9B91',\r\n                                                        allowOutsideClick: false,\r\n                                                        showCloseButton: true\r\n                                            }\r\n                                        ).then(res =>{\r\n                                            this.backToNews();\r\n                                        })\r\n                                    })\r\n                                }\r\n                            })\r\n                        }else{\r\n                            return\r\n                        };\r\n                    }else{\r\n                        if(result.isDismissed){\r\n                            return\r\n                        }else{\r\n                            Swal.fire(\r\n                                {\r\n                                    title: '<div class=\"big-square\"></div>'+\r\n                                            '<div class=\"little-square\"></div>'+\r\n                                            '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\"><p>Para completar el proceso se debe especificar el motivo de rechazo.</p></div></div>',\r\n                                            confirmButtonText: 'Seguir',\r\n                                            denyButtonText:'Cancelar',\r\n                                            denyButtonColor: '#0A9B91',\r\n                                            showDenyButton: true,\r\n                                            allowOutsideClick: false,\r\n                                            showCloseButton: true\r\n                                }\r\n                            ).then(result => {\r\n                                if(result.isConfirmed){\r\n                                    Swal.fire({\r\n                                        title: '<div class=\"big-square\"></div>'+\r\n                                        '<div class=\"little-square\"></div>'+\r\n                                        '<div class=\"bg-title-lit\"><div class=\"list-label pop absolute-center\">Especifique el motivo del rechazo de la solicitud.</div></div>'+\r\n                                        '<textarea id=input-detail maxLength=\"250\" pattern=\"^[a-zA-Z ,.-]+\"></textarea>',\r\n                                        denyButtonColor: '#0A9B91',\r\n                                        confirmButtonText: 'Enviar rechazo',\r\n                                        allowOutsideClick: false,\r\n                                        showCloseButton: true\r\n                                    }).then(result => {\r\n                                        var val = document.getElementById('input-detail').value;\r\n                                        if(val!==''){\r\n                                            if (result.isConfirmed) {\r\n                                                var val = document.getElementById('input-detail').value;\r\n                                                \r\n                                                Swal.fire(\r\n                                                    {\r\n                                                        title: '<div class=\"big-square\"></div>'+\r\n                                                                '<div class=\"little-square\"></div>'+\r\n                                                                '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\"><p>Este proceso es irreversible, se rechazará la petición de forma permanente.</p></div></div>',\r\n                                                                confirmButtonText: 'Rechazar',\r\n                                                                denyButtonText:'Cancelar',\r\n                                                                denyButtonColor: '#0A9B91',\r\n                                                                showDenyButton: true,\r\n                                                                allowOutsideClick: false,\r\n                                                                showCloseButton: true\r\n                                                    }\r\n                                                ).then(res =>{\r\n                                                    if (res.isConfirmed) {\r\n                                                       \r\n                                                        this.updateForm(val);\r\n                                                        this.mailForm.email=this.state.form.email;\r\n                                                        this.mailForm.name=this.state.form.name;\r\n                                                        this.mailForm.pdf={}\r\n                                                        this.mailForm.mailState=0;\r\n                                                        this.mailForm.denied=this.state.form.observations;\r\n                                                        \r\n                                                        this.mailForm.id=this.state.form.id;\r\n                                                        axios.post(this.url+\"mail\",this.mailForm)\r\n                                                        .then( res => {\r\n                                                            Swal.fire(\r\n                                                                {\r\n                                                                    title: '<div class=\"big-square\"></div>'+\r\n                                                                            '<div class=\"little-square\"></div>'+\r\n                                                                            '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\"><p>La solicitud ha sido rechazada.</p></div></div>',\r\n                                                                            confirmButtonText: 'Seguir',\r\n                                                                            denyButtonColor: '#0A9B91',\r\n                                                                            allowOutsideClick: false,\r\n                                                                            showCloseButton: true\r\n                                                                }\r\n                                                            ).then(res =>{\r\n                                                                this.backToNews();\r\n                                                            })\r\n                                                        })\r\n                                                    }\r\n                                                })\r\n                                            }else{\r\n                                                Swal.fire(\r\n                                                    {\r\n                                                        title: '<div class=\"big-square\"></div>'+\r\n                                                                '<div class=\"little-square\"></div>'+\r\n                                                                '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\"><p>Proceso cancelado.</p></div></div>',\r\n                                                                confirmButtonText: 'Seguir',\r\n                                                                denyButtonColor: '#0A9B91',\r\n                                                                showDenyButton: true,\r\n                                                                allowOutsideClick: false,\r\n                                                                showCloseButton: true\r\n                                                    }\r\n                                                ).then((result) => {\r\n                                                    return\r\n                                                })\r\n                                            }\r\n                                        }else{\r\n                                            if(result.isDismissed){\r\n                                                return\r\n                                            }else{\r\n                                                Swal.fire(\r\n                                                    {\r\n                                                        title: '<div class=\"big-square\"></div>'+\r\n                                                                '<div class=\"little-square\"></div>'+\r\n                                                                '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\"><p>Proceso cancelado, no se especificó el motivo de rechazo.</p></div></div>',\r\n                                                                confirmButtonText: 'Seguir',\r\n                                                                denyButtonColor: '#0A9B91',\r\n                                                                allowOutsideClick: false,\r\n                                                                showCloseButton: true\r\n                                                    }\r\n                                                ).then((result) => {\r\n                                                    return\r\n                                                })\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                }\r\n                                \r\n                            })\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }else{\r\n            if(this.newStateRef === 1){\r\n                debugger;\r\n                if(this.userData.current!==null){\r\n                    Swal.fire({\r\n                        title: '<div class=\"big-square\"></div>'+\r\n                        '<div class=\"little-square\"></div>'+\r\n                        '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\">El proceso de certificación es irreversible ¿Desea continuar?</div></div>',\r\n                        showCancelButton: true,\r\n                        confirmButtonColor: '#3085d6',\r\n                        cancelButtonColor: '#d33',\r\n                        confirmButtonText: 'Sí, certificar',\r\n                        cancelButtonText: 'Cancelar',\r\n                        showCloseButton: true\r\n        \r\n                    })\r\n                    .then(result => {\r\n                        if (result.isConfirmed) {\r\n                            Swal.fire({\r\n                                title: '<div class=\"big-square\"></div>'+\r\n                                '<div class=\"little-square\"></div>'+\r\n                                '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\">Se ha enviado la certificación</div></div>',\r\n                                denyButtonColor: '#0A9B91',\r\n                                confirmButtonText: 'Seguir',\r\n                                allowOutsideClick: false,\r\n                                showCloseButton: true\r\n                            });\r\n                            this.mailForm.email=this.state.form.email;\r\n                            this.mailForm.name=this.state.form.name;\r\n                            this.mailForm.mailState=1;\r\n                            this.mailForm.data= this.state.pdfString;\r\n                            this.mailForm.id=this.state.form.id;\r\n                            this.prevPdfObjectFunc(this.mailForm);\r\n        \r\n                        }\r\n                    });\r\n                }else{\r\n                    if(this.state.contratos.ejecuta.length===0 && this.state.contratos.suscribio.length===0){\r\n                        Swal.fire({\r\n                            title: '<div class=\"big-square\"></div>'+\r\n                            '<div class=\"little-square\"></div>'+\r\n                            '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\">Elija un contrato de la lista para poder seguir el proceso de certificación</div></div>',\r\n                            confirmButtonColor: '#3085d6',\r\n                            confirmButtonText: 'Seguir',\r\n                            showCloseButton: true\r\n            \r\n                        })\r\n                        .then(result => {\r\n                           return\r\n                        });\r\n                    }else{\r\n                        Swal.fire({\r\n                            title: '<div class=\"big-square\"></div>'+\r\n                            '<div class=\"little-square\"></div>'+\r\n                            '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\">El proceso de certificación es irreversible ¿Desea continuar?</div></div>',\r\n                            showCancelButton: true,\r\n                            confirmButtonColor: '#3085d6',\r\n                            cancelButtonColor: '#d33',\r\n                            confirmButtonText: 'Sí, certificar',\r\n                            cancelButtonText: 'Cancelar',\r\n                            showCloseButton: true\r\n            \r\n                        })\r\n                        .then(result => {\r\n                            if (result.isConfirmed) {\r\n                                Swal.fire({\r\n                                    title: '<div class=\"big-square\"></div>'+\r\n                                    '<div class=\"little-square\"></div>'+\r\n                                    '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\">Se ha enviado la certificación</div></div>',\r\n                                    denyButtonColor: '#0A9B91',\r\n                                    confirmButtonText: 'Seguir',\r\n                                    allowOutsideClick: false,\r\n                                    showCloseButton: true\r\n                                });\r\n                                this.mailForm.email=this.state.form.email;\r\n                                this.mailForm.name=this.state.form.name;\r\n                                this.mailForm.mailState=1;\r\n                                this.mailForm.data= this.state.pdfString;\r\n                                this.mailForm.id=this.state.form.id;\r\n                                this.prevPdfObjectFunc(this.mailForm);\r\n            \r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n               \r\n            }else{\r\n                Swal.fire({\r\n                    title: '<div class=\"big-square\"></div>'+\r\n                    '<div class=\"little-square\"></div>'+\r\n                    '<div class=\"bg-title-lit\"><div class=\"list-label pop absolute-center\">Especifique el motivo del rechazo de la solicitud.</div></div>'+\r\n                    '<textarea id=input-detail maxLength=\"250\" pattern=\"^[a-zA-Z ,.-]+\" ></textarea>',\r\n                    denyButtonColor: '#0A9B91',\r\n                    confirmButtonText: 'Enviar rechazo',\r\n                    allowOutsideClick: false,\r\n                    showCloseButton: true\r\n                }).then(result => {\r\n                    var val = document.getElementById('input-detail').value;\r\n                    if(val!==''){\r\n                        if (result.isConfirmed) {\r\n                            Swal.fire(\r\n                                {\r\n                                    title: '<div class=\"big-square\"></div>'+\r\n                                            '<div class=\"little-square\"></div>'+\r\n                                            '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\"><p>Este proceso es irreversible, se rechazará la petición de forma permanente.</p></div></div>',\r\n                                            confirmButtonText: 'Rechazar',\r\n                                            denyButtonText:'Cancelar',\r\n                                            denyButtonColor: '#0A9B91',\r\n                                            showDenyButton: true,\r\n                                            allowOutsideClick: false,\r\n                                            showCloseButton: true\r\n                                }\r\n                            ).then(res =>{\r\n                                if (res.isConfirmed) {\r\n                                               \r\n                                    this.updateForm(val);\r\n                                    this.mailForm.email=this.state.form.email;\r\n                                    this.mailForm.name=this.state.form.name;\r\n                                    this.mailForm.pdf={}\r\n                                    this.mailForm.mailState=0;\r\n                                    this.mailForm.denied=this.state.form.observations;\r\n                                    \r\n                                    this.mailForm.id=this.state.form.id;\r\n                                    axios.post(this.url+\"mail\",this.mailForm)\r\n                                    .then( res => {\r\n                                        Swal.fire(\r\n                                            {\r\n                                                title: '<div class=\"big-square\"></div>'+\r\n                                                        '<div class=\"little-square\"></div>'+\r\n                                                        '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\"><p>La solicitud ha sido rechazada.</p></div></div>',\r\n                                                        confirmButtonText: 'Seguir',\r\n                                                        denyButtonColor: '#0A9B91',\r\n                                                        showDenyButton: true,\r\n                                                        allowOutsideClick: false,\r\n                                                        showCloseButton: true\r\n                                            }\r\n                                        ).then(res =>{\r\n                                            this.backToNews();\r\n                                        })\r\n                                    })\r\n                                }\r\n                            })\r\n                        }else{\r\n                            return\r\n                        };\r\n                    }else{\r\n                        if(result.isDismissed){\r\n                            return\r\n                        }else{\r\n                            Swal.fire(\r\n                                {\r\n                                    title: '<div class=\"big-square\"></div>'+\r\n                                            '<div class=\"little-square\"></div>'+\r\n                                            '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\"><p>Para completar el proceso se debe especificar el motivo de rechazo.</p></div></div>',\r\n                                            confirmButtonText: 'Seguir',\r\n                                            denyButtonText:'Cancelar',\r\n                                            denyButtonColor: '#0A9B91',\r\n                                            showDenyButton: true,\r\n                                            allowOutsideClick: false,\r\n                                            showCloseButton: true\r\n                                }\r\n                            ).then(result => {\r\n                                if(result.isConfirmed){\r\n                                    Swal.fire({\r\n                                        title: '<div class=\"big-square\"></div>'+\r\n                                        '<div class=\"little-square\"></div>'+\r\n                                        '<div class=\"bg-title-lit\"><div class=\"list-label pop absolute-center\">Especifique el motivo del rechazo de la solicitud.</div></div>'+\r\n                                        '<textarea id=input-detail maxLength=\"250\" pattern=\"^[a-zA-Z ,.-]+\"></textarea>',\r\n                                        denyButtonColor: '#0A9B91',\r\n                                        confirmButtonText: 'Enviar rechazo',\r\n                                        allowOutsideClick: false,\r\n                                        showCloseButton: true\r\n                                    }).then(result => {\r\n                                        var val = document.getElementById('input-detail').value;\r\n                                        if(val!==''){\r\n                                            if (result.isConfirmed) {\r\n                                                var val = document.getElementById('input-detail').value;\r\n                                                \r\n                                                Swal.fire(\r\n                                                    {\r\n                                                        title: '<div class=\"big-square\"></div>'+\r\n                                                                '<div class=\"little-square\"></div>'+\r\n                                                                '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\"><p>Este proceso es irreversible, se rechazará la petición de forma permanente.</p></div></div>',\r\n                                                                confirmButtonText: 'Rechazar',\r\n                                                                denyButtonText:'Cancelar',\r\n                                                                denyButtonColor: '#0A9B91',\r\n                                                                showDenyButton: true,\r\n                                                                allowOutsideClick: false,\r\n                                                                showCloseButton: true\r\n                                                    }\r\n                                                ).then(res =>{\r\n                                                    if (res.isConfirmed) {\r\n                                                       \r\n                                                        this.updateForm(val);\r\n                                                        this.mailForm.email=this.state.form.email;\r\n                                                        this.mailForm.name=this.state.form.name;\r\n                                                        this.mailForm.pdf={}\r\n                                                        this.mailForm.mailState=0;\r\n                                                        this.mailForm.denied=this.state.form.observations;\r\n                                                        \r\n                                                        this.mailForm.id=this.state.form.id;\r\n                                                        axios.post(this.url+\"mail\",this.mailForm)\r\n                                                        .then( res => {\r\n                                                            Swal.fire(\r\n                                                                {\r\n                                                                    title: '<div class=\"big-square\"></div>'+\r\n                                                                            '<div class=\"little-square\"></div>'+\r\n                                                                            '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\"><p>La solicitud ha sido rechazada.</p></div></div>',\r\n                                                                            confirmButtonText: 'Seguir',\r\n                                                                            denyButtonColor: '#0A9B91',\r\n                                                                            showDenyButton: true,\r\n                                                                            allowOutsideClick: false,\r\n                                                                            showCloseButton: true\r\n                                                                }\r\n                                                            ).then(res =>{\r\n                                                                this.backToNews();\r\n                                                            })\r\n                                                        })\r\n                                                    }\r\n                                                })\r\n                                            }else{\r\n                                                Swal.fire(\r\n                                                    {\r\n                                                        title: '<div class=\"big-square\"></div>'+\r\n                                                                '<div class=\"little-square\"></div>'+\r\n                                                                '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\"><p>Proceso cancelado.</p></div></div>',\r\n                                                                confirmButtonText: 'Seguir',\r\n                                                                denyButtonColor: '#0A9B91',\r\n                                                                showDenyButton: true,\r\n                                                                allowOutsideClick: false,\r\n                                                                showCloseButton: true\r\n                                                    }\r\n                                                ).then((result) => {\r\n                                                    return\r\n                                                })\r\n                                            }\r\n                                        }else{\r\n                                            if(result.isDismissed){\r\n                                                return\r\n                                            }else{\r\n                                                Swal.fire(\r\n                                                    {\r\n                                                        title: '<div class=\"big-square\"></div>'+\r\n                                                                '<div class=\"little-square\"></div>'+\r\n                                                                '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\"><p>Proceso cancelado, no se especificó el motivo de rechazo.</p></div></div>',\r\n                                                                confirmButtonText: 'Seguir',\r\n                                                                denyButtonColor: '#0A9B91',\r\n                                                                allowOutsideClick: false,\r\n                                                                showCloseButton: true\r\n                                                    }\r\n                                                ).then((result) => {\r\n                                                    return\r\n                                                })\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                }\r\n                                \r\n                            })\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    updateForm= (data) =>{\r\n        var updatedForm = this.state.form;\r\n        updatedForm.state = this.newStateRef;\r\n        updatedForm.checked = 1;\r\n        updatedForm.observations = data;\r\n        updatedForm.admin_id = this.state.user.id;\r\n        axios.put(this.url+\"/update-form\", updatedForm)\r\n        .then( res => {\r\n            //emitir cambio en new\r\n            this.setCheckedForms();\r\n            this.setForms();\r\n        });\r\n    }\r\n\r\n    getPdf = () =>{\r\n        axios({\r\n                method: 'POST',\r\n                data: this.state.form,\r\n                url: this.url+\"/download-stamp\",\r\n                responseType: 'blob'\r\n        })\r\n        .then(response => {\r\n            const file = new Blob(\r\n              [response.data], \r\n              {type: 'application/pdf'});\r\n\r\n            const fileURL = URL.createObjectURL(file);\r\n            if(window.innerWidth>=768){\r\n\r\n                window.open(fileURL,\"theFrame\");\r\n            }else{\r\n\r\n                window.open(fileURL);\r\n                this.setState({\r\n                    showPdf: false\r\n                })\r\n            }\r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    getFormById = (id) =>{\r\n        axios.get(this.url+\"get-form/\"+id)\r\n        .then( res => {\r\n            this.setState({\r\n                form: res.data.data[0],\r\n                status: 'success'\r\n            })\r\n        });\r\n    }\r\n    addContract = (data, type) =>{\r\n        this.passData.current.addContract(data, type);\r\n        this.setState({\r\n            contratos: this.passData.current.state.contratos\r\n        })\r\n    }\r\n    removeContract = (data, type) =>{\r\n        this.contractorRef.current.removeContract(data);\r\n        this.setState({\r\n            contratos: this.passData.current.state.contratos\r\n        })\r\n    }\r\n   \r\n    render(){\r\n        const unCheckedObservations= () =>{\r\n            if(this.state.user!==null){\r\n                return(\r\n                    requestType  ? (\r\n                        <div className=\"row bg-title\">\r\n                            <div className=\"absolute-center bg-title-label\">\r\n                                Añadir observaciones\r\n                            </div>\r\n                        </div>\r\n                    ):(\r\n                        <div className=\"row bg-title\">\r\n                            <div className=\"absolute-center bg-title-label\">\r\n                                Añadir contratos\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                )\r\n            }\r\n        };\r\n        const checkedObservations= (data) =>{\r\n            if(data){\r\n                return(\r\n                    <div className=\"btn-aprove\" onClick={ (()=> {this.setState({blobPDF:true})})}>\r\n                        <div className=\"btn-label absolute-center\">Ver certificado</div>\r\n                    </div>\r\n                    \r\n                )\r\n            }else{\r\n                return(\r\n                    <div className=\"row reject-observations\">\r\n                        <div className=\"observation-title-container col-lg-12 h-20\">\r\n                            <div className=\"absolute-center bg-title-label\">\r\n                                Motivo de rechazo\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"observation col-lg-12 h-80\">\r\n                            <div className=\"observation-data\">\r\n                                <div className=\"input-text\">\r\n                                    {this.state.form.observations}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                )\r\n            }\r\n            \r\n        };\r\n        if(this.state.user!==null){\r\n            if(this.state.form.id !== undefined && this.state.form.id !== null){\r\n                var state = null;\r\n                var checked = true;\r\n                var rejected='item-detail-container';\r\n                var requestType = this.state.form.request_type === 1 ? true : false;\r\n                if(this.state.form.state === 1){\r\n                    state=true;\r\n                    rejected='item-detail-container certified';\r\n                }else if( this.state.form.state === 0){\r\n                    state = false;\r\n                    rejected='item-detail-container rejected';\r\n                }else{\r\n                    checked = false\r\n                }\r\n                return(\r\n                    <React.Fragment >\r\n                        <div className={rejected}>\r\n                            <div className=\"row container-top no-gutters justify-content-center\">\r\n                                <div className=\"item-detail col-lg-6\">\r\n                                    <div className=\"row content-user-data no-gutters\">\r\n                                        <div className=\"col-lg-12 h-100 align-items-center\">\r\n                                            <div className=\"row h-10 align-items-center  justify-content-center\">\r\n                                                <div className=\"title-label-form\">Información del formulario</div>\r\n                                            </div>\r\n                                            <div className=\"row h-40 align-items-center  justify-content-center\">\r\n                                                <div className=\"item-container col-lg-12\">\r\n                                                    <div className=\"item-label\">Nombre</div>\r\n                                                    <div className=\"item-data\">\r\n                                                        <div className=\"input-text absolute-center\">\r\n                                                            {this.state.form.name}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"item-container col-lg-12\">\r\n                                                    <div className=\"item-label\">Correo</div>\r\n                                                    <div className=\"item-data\">\r\n                                                        <div className=\"input-text absolute-center\">\r\n                                                            {this.state.form.email}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"item-container col-lg-12\">\r\n                                                    <div className=\"item-label\">Identificación</div>\r\n                                                    <div className=\"item-data\">\r\n                                                        <div className=\"input-text absolute-center\">\r\n                                                            {this.state.form.identification}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"item-container col-lg-12\">\r\n                                                    <div className=\"item-label\">Teléfono</div>\r\n                                                    <div className=\"item-data\">\r\n                                                        <div className=\"input-text absolute-center\">\r\n                                                            \r\n                                                            {this.state.form.telephone}\r\n                                                        </div>\r\n                                                    </div>\r\n                                            </div>\r\n                                            </div>\r\n                                            <div className=\"row h-50 align-items-center  justify-content-center\">\r\n                                                <div className=\"item-container area col-lg-12\">\r\n                                                    <div className=\"item-label\">Contenido</div>\r\n                                                    <div className=\"item-data\">\r\n                                                        <div className=\"input-text absolute-center text-area\">\r\n                                                            {this.state.form.content}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"item-container col-lg-12\">\r\n                                                    <div className=\"item-label\">PDF</div>\r\n                                                    <div className=\"btn-pdf\" onClick={() => this.setState({showPdf:true})}>\r\n                                                        <div className=\"btn-label absolute-center\">Ver estampilla</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <Modal show={this.state.showPdf} onShow={this.getPdf}  onHide={() =>this.setState({showPdf:false})}>\r\n                                            <Modal.Header closeButton>\r\n                                            <Modal.Title>Estampilla</Modal.Title>\r\n                                            </Modal.Header>\r\n                                            <Modal.Body>\r\n                                            <div className=\"pdf-viewer\">\r\n                                                <iframe name=\"theFrame\"></iframe>\r\n                                            </div>\r\n                                            </Modal.Body>\r\n                                        </Modal>\r\n                                        <Modal show={this.state.previewPDF} onShow={this.prevPDF}  onHide={() =>this.setState({previewPDF:false})}>\r\n                                            <Modal.Header closeButton>\r\n                                            <Modal.Title>Visualizador del PDF</Modal.Title>\r\n                                            </Modal.Header>\r\n                                            <Modal.Body>\r\n                                            <div className=\"pdf-viewer\">\r\n                                                <div id=\"viewer\"></div>\r\n                                            </div>\r\n                                            </Modal.Body>\r\n                                        </Modal>\r\n                                        <Modal show={this.state.blobPDF} onShow={this.viewPrevPDf}  onHide={() =>this.setState({blobPDF:false})}>\r\n                                            <Modal.Header closeButton>\r\n                                            <Modal.Title>Visualizador del PDF</Modal.Title>\r\n                                            </Modal.Header>\r\n                                            <Modal.Body>\r\n                                            <div className=\"pdf-viewer\">\r\n                                                <iframe name=\"v-pdf\"></iframe>\r\n                                            </div>\r\n                                            </Modal.Body>\r\n                                        </Modal>\r\n                                        \r\n                                    </div>\r\n\r\n                                   \r\n                                </div>\r\n                                <div className=\"user-data-container col-lg-6\">\r\n                                    {\r\n                                        requestType ? (\r\n                                            <React.Fragment>\r\n                                                <div className=\"content-payroll-data\">\r\n                                                    <PayrollData\r\n                                                        payrollId = {this.state.form.identification}\r\n                                                        ref = {this.userData}\r\n                                                        user= {this.state.user}\r\n                                                    />\r\n                                                </div>\r\n                                            </React.Fragment>\r\n                                        ):(\r\n                                            <React.Fragment>\r\n                                                <div className=\"content-contractor-data\">\r\n                                                    <ContractorData\r\n                                                        contractorId = {this.state.form.identification}\r\n                                                        pdfData = {this.addContract}\r\n                                                        addedContract = {this.state.addedContract}\r\n                                                        ref = {this.contractorRef}\r\n                                                        user= {this.state.user}\r\n                                                    />\r\n                                                </div>\r\n                                            </React.Fragment>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                               \r\n                            </div>\r\n                                {\r\n                                    this.state.form.checked ? (\r\n                                        checkedObservations(this.state.form.state, requestType)\r\n                                    ):(    \r\n                                        unCheckedObservations()\r\n                                    )\r\n                                }\r\n                            <div className=\"row container-bottom no-gutters justify-content-center\">\r\n                                \r\n                               \r\n                                    {\r\n                                        !checked && requestType &&\r\n                                        <React.Fragment>\r\n                                             <div className=\"col-lg-12\">\r\n\r\n                                                <div className=\"content-create-pdf h-90\">\r\n                                                    <CreatePDFPayroll\r\n                                                        contractData = {this.state.addedContract}\r\n                                                        ref = {this.passDataPayroll}\r\n                                                        prev={this.prevPDF}\r\n                                                        pdfPrev={this.viewPrevPDf}\r\n                                                        user= {this.state.user}\r\n                                                    />\r\n                                                </div>\r\n                                             </div>\r\n                                        </React.Fragment>\r\n                                    }\r\n                                    {\r\n                                        !checked && !requestType &&\r\n                                        <React.Fragment>\r\n                                            <div className=\"col-lg-6\">\r\n                                                <div className=\"content-create-pdf h-90\">\r\n                                                    { \r\n                                                        <CreatePDF\r\n                                                            contractData = {this.state.addedContract}\r\n                                                            ref = {this.passData}\r\n                                                            remove = {this.removeContract}\r\n                                                            prev={this.prevPDF}\r\n                                                            pdfPrev={this.viewPrevPDf}\r\n                                                            user= {this.state.user}\r\n                                                        />\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-lg-6\"></div>\r\n                                        </React.Fragment>\r\n                                    }\r\n                            </div>\r\n                            \r\n                            <div className=\"row options-buttons align-items-center justify-content-center\">\r\n                                {\r\n                                    state && checked && \r\n                                            <div className=\"btn-aprove disabled active\">\r\n                                                <div className=\"btn-label absolute-center\">Certificado</div>\r\n                                            </div>\r\n                                }\r\n                                {\r\n                                    !state && checked && \r\n                                            <div className=\"btn-deny disabled active\">\r\n                                                <div className=\"btn-label absolute-center\">Rechazado</div>\r\n                                            </div>\r\n                                }\r\n                                {\r\n                                    !checked && \r\n                                    <React.Fragment>\r\n                                                <div className=\"btn-aprove\" onClick={ (()=> {this.updateDataState(1)})}>\r\n                                                    <div className=\"btn-label absolute-center\">Certificar</div>\r\n                                                </div>\r\n                                                <div className=\"col-lg-2 separator\"></div>\r\n                                                <div className=\"btn-deny\" onClick={ (()=> {this.updateDataState(0)})}>\r\n                                                    <div className=\"btn-label absolute-center\">Rechazar</div>\r\n                                                </div>\r\n                                    </React.Fragment>\r\n                                }\r\n                            </div>\r\n                            <div className=\"back-container\">\r\n                                <div className=\"btn-back\" onClick={this.backToNews}>\r\n                                    <div className=\"btn-label absolute-center\">Volver</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </React.Fragment>\r\n                )\r\n            }else if (this.state.form === undefined && this.state.status=== 'success'){\r\n                    return(\r\n                        <React.Fragment>\r\n                        <h1> no hay Formularios con este id</h1>\r\n                        </React.Fragment>\r\n                    )\r\n            }else{\r\n                    return(\r\n                        <React.Fragment>\r\n                            <h1> Cargando espera mientras carga</h1>\r\n                        </React.Fragment>\r\n                    )\r\n            }\r\n        }else{\r\n            if(this.state.form.id !== undefined && this.state.form.id !== null){\r\n                state = null;\r\n                \r\n                checked = true;\r\n                requestType = this.state.form.request_type === 1 ? true : false;\r\n                if(this.state.form.state === 1){\r\n                    state=true;\r\n                }else if( this.state.form.state === 0){\r\n                    state = false;\r\n                }else{\r\n                    \r\n                    checked = false\r\n                }\r\n                return(\r\n                    <React.Fragment>\r\n                    <div className={!state ? \"item-detail-container rejected\" :  \"item-detail-container\" }>\r\n                        <div className=\"row external-user container-top no-gutters justify-content-center\">\r\n                            <div className=\"item-detail col-lg-12\">\r\n                                <div className=\"row content-user-data no-gutters\">\r\n                                    <div className=\"col-lg-12 h-100 align-items-center\">\r\n                                        <div className=\"row h-10 align-items-center  justify-content-center\">\r\n                                            <div className=\"title-label-form\">Información del formulario</div>\r\n                                        </div>\r\n                                        <div className=\"row h-40 align-items-center  justify-content-center\">\r\n                                            <div className=\"item-container col-lg-12\">\r\n                                                <div className=\"item-label\">Nombre</div>\r\n                                                <div className=\"item-data\">\r\n                                                    <div className=\"input-text absolute-center\">\r\n                                                        {this.state.form.name}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"item-container col-lg-12\">\r\n                                                <div className=\"item-label\">Correo</div>\r\n                                                <div className=\"item-data\">\r\n                                                    <div className=\"input-text absolute-center\">\r\n                                                        {this.state.form.email}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"item-container col-lg-12\">\r\n                                                <div className=\"item-label\">Identificación</div>\r\n                                                <div className=\"item-data\">\r\n                                                    <div className=\"input-text absolute-center\">\r\n                                                        {this.state.form.identification}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"item-container col-lg-12\">\r\n                                                <div className=\"item-label\">Teléfono</div>\r\n                                                <div className=\"item-data\">\r\n                                                    <div className=\"input-text absolute-center\">\r\n                                                        \r\n                                                        {this.state.form.telephone}\r\n                                                    </div>\r\n                                                </div>\r\n                                        </div>\r\n                                        </div>\r\n                                        <div className=\"row h-50 align-items-center  justify-content-center\">\r\n                                            <div className=\"item-container area col-lg-12\">\r\n                                                <div className=\"item-label\">Contenido</div>\r\n                                                <div className=\"item-data\">\r\n                                                    <div className=\"input-text absolute-center\">\r\n                                                        {this.state.form.content}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"item-container col-lg-12\">\r\n                                                <div className=\"item-label\">PDF</div>\r\n                                                <div className=\"btn-pdf\" onClick={() => this.setState({showPdf:true})}>\r\n                                                    <div className=\"btn-label absolute-center\">Ver estampilla</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Modal show={this.state.showPdf} onShow={this.getPdf}  onHide={() =>this.setState({showPdf:false})}>\r\n                                            <Modal.Header closeButton>\r\n                                            <Modal.Title>Estampilla</Modal.Title>\r\n                                            </Modal.Header>\r\n                                            <Modal.Body>\r\n                                            <div className=\"pdf-viewer\">\r\n                                                <iframe name=\"theFrame\"></iframe>\r\n                                            </div>\r\n                                            </Modal.Body>\r\n                                        </Modal>\r\n                                        <Modal show={this.state.previewPDF} onShow={this.prevPDF}  onHide={() =>this.setState({previewPDF:false})}>\r\n                                            <Modal.Header closeButton>\r\n                                            <Modal.Title>Visualizador del PDF</Modal.Title>\r\n                                            </Modal.Header>\r\n                                            <Modal.Body>\r\n                                            <div className=\"pdf-viewer\">\r\n                                                <div id=\"viewer\"></div>\r\n                                            </div>\r\n                                            </Modal.Body>\r\n                                        </Modal>\r\n                                        <Modal show={this.state.blobPDF} onShow={this.viewPrevPDf}  onHide={() =>this.setState({blobPDF:false})}>\r\n                                            <Modal.Header closeButton>\r\n                                            <Modal.Title>Visualizador del PDF</Modal.Title>\r\n                                            </Modal.Header>\r\n                                            <Modal.Body>\r\n                                            <div className=\"pdf-viewer\">\r\n                                                <iframe name=\"v-pdf\"></iframe>\r\n                                            </div>\r\n                                            </Modal.Body>\r\n                                        </Modal>\r\n                                </div>\r\n                            </div>\r\n                        \r\n                        </div>\r\n                        <div className=\"row container-bottom no-gutters justify-content-center\">\r\n                              \r\n                        </div>\r\n                        {\r\n                                    this.state.form.checked ? (\r\n                                        checkedObservations(this.state.form.state, requestType)\r\n                                    ):(    \r\n                                        unCheckedObservations()\r\n                                    )\r\n                                }\r\n                        <div className=\"row options-buttons align-items-center justify-content-center\">\r\n                        {\r\n                            state && checked && \r\n                                    <div className=\"btn-aprove disabled active\">\r\n                                        <div className=\"btn-label absolute-center\">Certificado</div>\r\n                                    </div>\r\n                        }\r\n                        {\r\n                            !state && checked && \r\n                                    <div className=\"btn-deny disabled active\">\r\n                                        <div className=\"btn-label absolute-center\">Rechazado</div>\r\n                                    </div>\r\n                        }\r\n                        {\r\n                            !checked && \r\n                            <div className=\"btn-aprove disabled active\">\r\n                                <div className=\"btn-label absolute-center\">En revisión</div>\r\n                            </div>\r\n                        }\r\n                    \r\n                    </div>\r\n                    </div>\r\n                </React.Fragment>\r\n                )\r\n            }else if (this.state.form === undefined && this.state.status=== 'success'){\r\n                return(\r\n                    <React.Fragment>\r\n                    <h1> no hay Formularios con este id</h1>\r\n                    </React.Fragment>\r\n                )\r\n            }else{\r\n                    return(\r\n                        <React.Fragment>\r\n                            <h1> Cargando espera mientras carga</h1>\r\n                        </React.Fragment>\r\n                    )\r\n            }\r\n        }\r\n\r\n       \r\n    }\r\n}\r\nexport default NewDetails;","import './Home.css';\r\nimport React, {Component} from 'react';\r\nimport Global from '../Global';\r\n\r\nimport logo from '../../assets/images/metrolinea-logo.png';\r\nimport {io} from 'socket.io-client';\r\n\r\nclass Home extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.url = Global.url; \r\n        this.ws = Global.ws;\r\n        this.socket = null;\r\n        this.state ={\r\n            user : {\r\n                name: '',\r\n                email: '',\r\n                identification: '',\r\n                telephone: ''\r\n            },\r\n            stamp: null,\r\n            status: null\r\n        };\r\n    }\r\n    componentWillMount(){\r\n        this.connectSocket();\r\n    }\r\n    connectSocket = () =>{\r\n        this.socket = (io(this.ws));\r\n    }\r\n    setSocket = (res) =>{\r\n        /*this.socket.emit(\"set-unchecked-news\",res.data.data);\r\n        this.socket.on(\"get-unchecked-news\", data => {\r\n            this.setState({\r\n                forms: data,\r\n                status: 'success'\r\n            })\r\n        });*/\r\n    }\r\n    /*getForms = async () =>{\r\n       await axios.get(this.url+\"get-unchecked-forms\")\r\n            .then( res => {\r\n                this.setSocket(res);\r\n            })\r\n    }*/\r\n    \r\n    redirect = (data) => {\r\n        if( data=== 1){\r\n            this.props.history.push('/login');\r\n        }else{\r\n            this.props.history.push('/form');\r\n        }\r\n    }\r\n    render(){\r\n       \r\n        /*if(this.state.status==='succes'){\r\n            return (\r\n                <Redirect to=\"/user-home\"/>\r\n            )\r\n        }*/\r\n        return(\r\n            <React.Fragment>\r\n               <div className=\"container-home row h-100 align-items-center justify-content-center\">\r\n                   <div className=\"content-container-home\">\r\n                        <div className=\"row h-25 no-gutters align-items-center justify-content-center\">\r\n                            <div className=\"form-logo\">\r\n                                    <img className=\"login-logo\" src={logo} alt=\"imagen de metrolinea\"></img>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row h-15 no-gutters align-items-center justify-content-center\">\r\n                            <div className=\"col-lg-12 align-items-center justify-content-center\">\r\n                                <div className=\"home-title-color absolute-center\">\r\n                                    Bienvenido al asistente\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row h-15 no-gutters align-items-center justify-content-center\">\r\n                            <div className=\"col-lg-12 align-items-center justify-content-center\">\r\n                                <div className=\"home-description absolute-center\">\r\n                                    Acceda para solicitar carta laboral o inicie sesión para comenzar la administracion de cartas laborales.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row h-20 no-gutters align-items-center justify-content-center\">\r\n                            <div className=\"content admin\">\r\n                                <div className=\"btn-login\" onClick={(()=> {this.redirect(1)})}>\r\n                                        <div className=\"btn-label absolute-center\">\r\n                                            Inicia sesión\r\n                                        </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row h-20 no-gutters align-items-center justify-content-center\">\r\n                            <div className=\"content external\">  \r\n                                <div className=\"btn-carta\" onClick={(()=> {this.redirect(0)})}>\r\n                                        <div className=\"btn-label absolute-center\">\r\n                                            Solicitar una carta laboral\r\n                                        </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                   </div>\r\n                  \r\n                   \r\n               </div>\r\n               \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default Home;","import './Login.css';\r\nimport React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Global from '../Global';\r\nimport logo from '../../assets/images/metrolinea-logo.png';\r\nimport {io} from 'socket.io-client';\r\nimport Swal from 'sweetalert2';\r\n\r\nclass Login extends Component{\r\n    \r\n    userNameRef = React.createRef();\r\n    userPassRef = React.createRef();\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.url = Global.url; \r\n        this.ws = Global.ws;\r\n        this.socket = null;\r\n        this.state ={\r\n            user : {\r\n                name: '',\r\n                pass: ''\r\n            },\r\n            status: null\r\n        };\r\n    }\r\n    componentWillMount(){\r\n        this.connectSocket();\r\n    }\r\n    componentDidMount(){\r\n        var elements = document.getElementsByTagName(\"INPUT\");\r\n        for (var i = 0; i < elements.length; i++) {\r\n            elements[i].oninvalid = function(e) {\r\n                e.target.setCustomValidity(\"\");\r\n                if (!e.target.validity.valid) {\r\n                    e.target.setCustomValidity(\"Complete este campo.\");\r\n                }\r\n            };\r\n            elements[i].oninput = function(e) {\r\n                e.target.setCustomValidity(\"\");\r\n            };\r\n        }\r\n    }\r\n    connectSocket = () =>{\r\n        this.socket = (io(this.ws));\r\n       \r\n    }\r\n    setSocket = (res) =>{\r\n        this.socket.emit(\"set-unchecked-news\",res.data.data);\r\n        this.socket.on(\"get-unchecked-news\", data => {\r\n            this.setState({\r\n                forms: data,\r\n                status: 'success'\r\n            })\r\n        });\r\n    }\r\n    isLogged = () =>{\r\n\r\n    }\r\n    login =  () =>{\r\n        axios.get(this.url+\"get-unchecked-forms\")\r\n            .then( res => {\r\n                this.setSocket(res);\r\n            })\r\n    }\r\n    saveForm =  async (e) =>{\r\n        e.preventDefault();\r\n        var userData = {\r\n            name : this.userNameRef.current.value,\r\n            pass : this.userPassRef.current.value\r\n        }\r\n        if(this.userNameRef.current.value===''){\r\n            this.userNameRef.current.setCustomValidity(\"Complete este campo\");\r\n        }else if(this.userPassRef.current.value===''){\r\n            this.userNameRef.current.setCustomValidity(\"Complete este campo\");\r\n        }\r\n        this.setState({\r\n           user : userData\r\n        })\r\n        await axios.post(this.url+'login', userData)\r\n            .then( res =>{\r\n                if(res){\r\n                    \r\n                    //Crear Sesion User\r\n                    Swal.fire({\r\n                        title: '<div class=\"big-square\"></div>'+\r\n                        '<div class=\"little-square\"></div>'+\r\n                        '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\"><p>Bienvenido</p></div></div>',\r\n                        confirmButtonText: 'Seguir',\r\n                        allowOutsideClick: false,\r\n                        showCloseButton: true}\r\n                    ).then(()=>{\r\n                        localStorage.setItem('userSesion', res.data.token);\r\n                        this.props.history.push('/news');\r\n                    })\r\n                }else{\r\n                    Swal.fire(\r\n                        {\r\n                            title: '<div class=\"big-square\"></div>'+\r\n                                    '<div class=\"little-square\"></div>'+\r\n                                    '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\"><p>Usuario o contraseña incorrectos</p></div></div>',\r\n                                    confirmButtonText: 'Seguir',\r\n                                    allowOutsideClick: false,\r\n                                    showCloseButton: true\r\n                        }\r\n                    )\r\n                    this.setState({\r\n                        status:'failed'\r\n                    })\r\n                }\r\n            }, error =>{\r\n                 Swal.fire(\r\n                    {\r\n                        title: '<div class=\"big-square\"></div>'+\r\n                                '<div class=\"little-square\"></div>'+\r\n                                '<div class=\"bg-title-pop\"><div class=\"list-label pop absolute-center\"><p>Usuario o contraseña incorrectos</p></div></div>',\r\n                                confirmButtonText: 'Seguir',\r\n                                allowOutsideClick: false,\r\n                                showCloseButton: true\r\n                    }\r\n                )\r\n            })\r\n        \r\n    }\r\n    backToNews = () => {\r\n        this.props.history.push('/');\r\n    }\r\n    render(){\r\n       \r\n        /*if(this.state.status==='succes'){\r\n            return (\r\n                <Redirect to=\"/user-home\"/>\r\n            )\r\n        }*/\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"row h-100 content-login no-gutters justify-content-center align-items-center\">\r\n                    <div className=\"form-content-container row justify-content-center align-items-center\">\r\n                        <form className=\"form\" onSubmit={this.saveForm}>\r\n                            <div className=\"form-group row h-30 justify-content-center align-items-center\">\r\n                                <div className=\"form-logo\">\r\n                                    <img className=\"login-logo\" src={logo} alt=\"imagen de metrolinea\"></img>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group  row h-20 justify-content-center align-items-center\">\r\n                                <div className=\"form-label col-lg-12\" htmlFor=\"nombre\">\r\n                                    <div className=\"text absolute-center\">\r\n                                        Nombre de usuario\r\n                                    </div>\r\n                                    <div className=\"required-mark\">\r\n                                        *\r\n                                    </div>\r\n                                </div>\r\n                                <input className=\"form-input col-lg-12\" type=\"text\" name=\"nombre\" ref={this.userNameRef} required maxlength=\"20\" pattern=\"^[a-zA-z]+([\\s][a-zA-Z]+)*$\"></input>\r\n                            </div>\r\n                            <div className=\"form-group  row h-20 justify-content-center align-items-center\">\r\n                                <div className=\"form-label col-lg-12\" htmlFor=\"pass\">\r\n                                    <div className=\"text absolute-center\">\r\n                                        Contraseña\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"required-mark\">\r\n                                        *\r\n                                    </div>\r\n                                </div>\r\n                                <input className=\"form-input col-lg-12\" type=\"password\" name=\"pass\" ref={this.userPassRef} required maxlength=\"20\" pattern=\"^[a-zA-z]+([\\s][a-zA-Z]+)*$\"></input>\r\n                            </div>\r\n                            <div className=\"row h-30 justify-content-center align-items-center\">\r\n                                <input type=\"submit\" value=\"Entrar\"></input>\r\n                            </div>\r\n                            <div className=\"back-container\">\r\n                                <div className=\"btn-back\" onClick={this.backToNews}>\r\n                                    <div className=\"btn-label absolute-center\">Volver</div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default Login;","import React, {Component} from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Form from './components/form/Form';\r\nimport News from './components/news/News';\r\nimport NewDetails from './components/newDetails/NewDetails';\r\nimport Home from './components/home/Home';\r\nimport Login from './components/login/Login';\r\n//importar componentes\r\nclass Router extends Component {\r\n\r\n    render () {\r\n        return (\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Home} />\r\n                    <Route exact path=\"/form\" component={Form} />\r\n                    \r\n                    <Route exact path=\"/login\" component={Login} />\r\n                    <Route exact path=\"/news\" component={News} />\r\n                    <Route path=\"/new-details/:id\" component={NewDetails} />\r\n                    <Route render = {()=>(\r\n                        <React.Fragment>\r\n                            <h1>Pagina no encontrada</h1>\r\n                            <NavLink to=\"/\">Inicio</NavLink>\r\n                        </React.Fragment>\r\n                    )} />\r\n                </Switch>\r\n            </BrowserRouter>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default Router;","import './App.css';\nimport Router from './Router';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <section className=\"components\">\n        <Router />\n        {\n          //<HomeComponent/>\n        }\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}